{"ast":null,"code":"var _jsxFileName = \"/Users/yijianzong/Documents/GitHub/Housing_Proj/NewFrontEnd/src/components/PlacesAutoComplete.tsx\";\nimport React from 'react';\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport { setPost, selectPost } from '../redux/slices/posting';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getDurationInMinutes } from '../apis/google';\n\nconst AutoComplete = ({\n  className = ''\n}) => {\n  const address = useSelector(selectPost).address;\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(PlacesAutocomplete, {\n    value: address,\n    onChange: add => dispatch(setPost(['address', add])),\n    onSelect: add => {\n      dispatch(setPost(['address', add]));\n      getDurationInMinutes(add).then(distance => {\n        dispatch(setPost(['distance', distance ? distance : 'unknown']));\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, ({\n    getInputProps,\n    suggestions,\n    getSuggestionItemProps,\n    loading\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps({\n    placeholder: 'Search Places ...',\n    className\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, loading && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  }, \"Loading...\"), suggestions.map(suggestion =>\n  /*#__PURE__*/\n  // TODO: Missing \"key\" prop for element in iterator\n  React.createElement(\"div\", Object.assign({\n    key: suggestion\n  },\n  /* TODO fix 'Prop spreading is forbidden' */\n  getSuggestionItemProps(suggestion, {\n    className: suggestion.active ? 'suggestion-item--active' : 'suggestion-item',\n    style: suggestion.active ? {\n      backgroundColor: '#fafafa',\n      cursor: 'pointer'\n    } : {\n      backgroundColor: '#ffffff',\n      cursor: 'pointer'\n    }\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, suggestion.description))))));\n};\n\nexport default AutoComplete;","map":{"version":3,"sources":["/Users/yijianzong/Documents/GitHub/Housing_Proj/NewFrontEnd/src/components/PlacesAutoComplete.tsx"],"names":["React","PlacesAutocomplete","setPost","selectPost","useSelector","useDispatch","getDurationInMinutes","AutoComplete","className","address","dispatch","add","then","distance","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","map","suggestion","active","style","backgroundColor","cursor","description"],"mappings":";AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,OAAOC,kBAAP,MAA+B,2BAA/B;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,yBAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,oBAAT,QAAqC,gBAArC;;AAMA,MAAMC,YAAiC,GAAG,CAAC;AAAEC,EAAAA,SAAS,GAAG;AAAd,CAAD,KAAwB;AAChE,QAAMC,OAAO,GAAGL,WAAW,CAACD,UAAD,CAAX,CAAwBM,OAAxC;AACA,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEA,sBACE,oBAAC,kBAAD;AACE,IAAA,KAAK,EAAEI,OADT;AAEE,IAAA,QAAQ,EAAGE,GAAD,IAASD,QAAQ,CAACR,OAAO,CAAC,CAAC,SAAD,EAAYS,GAAZ,CAAD,CAAR,CAF7B;AAGE,IAAA,QAAQ,EAAGA,GAAD,IAAS;AACjBD,MAAAA,QAAQ,CAACR,OAAO,CAAC,CAAC,SAAD,EAAYS,GAAZ,CAAD,CAAR,CAAR;AACAL,MAAAA,oBAAoB,CAACK,GAAD,CAApB,CAA0BC,IAA1B,CAAgCC,QAAD,IAAmB;AAChDH,QAAAA,QAAQ,CAACR,OAAO,CAAC,CAAC,UAAD,EAAaW,QAAQ,GAAGA,QAAH,GAAc,SAAnC,CAAD,CAAR,CAAR;AACD,OAFD;AAGD,KARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUG,CAAC;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,WAAjB;AAA8BC,IAAAA,sBAA9B;AAAsDC,IAAAA;AAAtD,GAAD,kBACC,uDACE,+CAEMH,aAAa,CAAC;AAChBI,IAAAA,WAAW,EAAE,mBADG;AAEhBV,IAAAA;AAFgB,GAAD,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGS,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADd,EAEGF,WAAW,CAACI,GAAZ,CAAiBC,UAAD;AAAA;AACf;AACA;AACE,IAAA,GAAG,EAAEA;AADP;AAGI;AACGJ,EAAAA,sBAAsB,CAACI,UAAD,EAAa;AACpCZ,IAAAA,SAAS,EAAEY,UAAU,CAACC,MAAX,GACP,yBADO,GAEP,iBAHgC;AAIpCC,IAAAA,KAAK,EAAEF,UAAU,CAACC,MAAX,GACH;AAAEE,MAAAA,eAAe,EAAE,SAAnB;AAA8BC,MAAAA,MAAM,EAAE;AAAtC,KADG,GAEH;AAAED,MAAAA,eAAe,EAAE,SAAnB;AAA8BC,MAAAA,MAAM,EAAE;AAAtC;AANgC,GAAb,CAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOJ,UAAU,CAACK,WAAlB,CAdF,CAFD,CAFH,CARF,CAXJ,CADF;AA8CD,CAlDD;;AAoDA,eAAelB,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport { setPost, selectPost } from '../redux/slices/posting';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getDurationInMinutes } from '../apis/google';\n\ninterface PathProps {\n  className?: string;\n}\n\nconst AutoComplete: React.FC<PathProps> = ({ className = '' }) => {\n  const address = useSelector(selectPost).address;\n  const dispatch = useDispatch();\n\n  return (\n    <PlacesAutocomplete\n      value={address}\n      onChange={(add) => dispatch(setPost(['address', add]))}\n      onSelect={(add) => {\n        dispatch(setPost(['address', add]));\n        getDurationInMinutes(add).then((distance: any) => {\n          dispatch(setPost(['distance', distance ? distance : 'unknown']));\n        });\n      }}\n    >\n      {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n        <>\n          <input\n            // TODO fix 'Prop spreading is forbidden'\n            {...getInputProps({\n              placeholder: 'Search Places ...',\n              className,\n            })}\n          />\n          <div>\n            {loading && <div>Loading...</div>}\n            {suggestions.map((suggestion) => (\n              // TODO: Missing \"key\" prop for element in iterator\n              <div\n                key={suggestion}\n                {\n                  /* TODO fix 'Prop spreading is forbidden' */\n                  ...getSuggestionItemProps(suggestion, {\n                    className: suggestion.active\n                      ? 'suggestion-item--active'\n                      : 'suggestion-item',\n                    style: suggestion.active\n                      ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                      : { backgroundColor: '#ffffff', cursor: 'pointer' },\n                  })\n                }\n              >\n                <span>{suggestion.description}</span>\n              </div>\n            ))}\n          </div>\n        </>\n      )}\n    </PlacesAutocomplete>\n  );\n};\n\nexport default AutoComplete;\n"]},"metadata":{},"sourceType":"module"}