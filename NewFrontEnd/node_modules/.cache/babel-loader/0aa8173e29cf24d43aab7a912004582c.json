{"ast":null,"code":"import { backendAPI } from './apiBases';\n\nconst getHousing = async () => {\n  try {\n    var _result$request;\n\n    const result = await backendAPI.get('/getRoom', {\n      withCredentials: true\n    });\n    console.log(result); // handle errors\n\n    if (((_result$request = result.request) === null || _result$request === void 0 ? void 0 : _result$request.status) !== 200) throw Error('Bad request');\n    return result.data;\n  } catch (err) {\n    console.error(err);\n    return undefined;\n  }\n};\n\nconst searchHousing = async roomJson => {\n  try {\n    var _result$request2;\n\n    const result = await backendAPI.post('/searchRoom', roomJson, {\n      headers: {\n        'content-type': 'application/json'\n      },\n      withCredentials: true\n    });\n    console.log(result); // handle errors\n\n    if (((_result$request2 = result.request) === null || _result$request2 === void 0 ? void 0 : _result$request2.status) !== 200) throw Error('Bad request');\n    return result.data;\n  } catch (err) {\n    console.error(err);\n    return undefined;\n  }\n};\n\nconst postHousing = async roomForm => {\n  console.log('get called');\n\n  try {\n    var _result$request3;\n\n    const result = await backendAPI.post('/postRoom', roomForm, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      },\n      withCredentials: true\n    });\n    console.log(result, 'get result'); // handle errors\n\n    if (((_result$request3 = result.request) === null || _result$request3 === void 0 ? void 0 : _result$request3.status) !== 201) throw Error('Bad request');\n    return result.data;\n  } catch (err) {\n    console.error(err);\n    return undefined;\n  }\n};\n\nexport { getHousing, searchHousing, postHousing };","map":{"version":3,"sources":["/Users/yijianzong/Documents/GitHub/Housing_Proj/NewFrontEnd/src/apis/housing.ts"],"names":["backendAPI","getHousing","result","get","withCredentials","console","log","request","status","Error","data","err","error","undefined","searchHousing","roomJson","post","headers","postHousing","roomForm"],"mappings":"AAAA,SAASA,UAAT,QAA2B,YAA3B;;AAEA,MAAMC,UAAU,GAAG,YAAwC;AACzD,MAAI;AAAA;;AACF,UAAMC,MAAM,GAAG,MAAMF,UAAU,CAACG,GAAX,CAAe,UAAf,EAA2B;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KAA3B,CAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ,EAFE,CAGF;;AACA,QAAI,oBAAAA,MAAM,CAACK,OAAP,oEAAgBC,MAAhB,MAA2B,GAA/B,EAAoC,MAAMC,KAAK,CAAC,aAAD,CAAX;AACpC,WAAOP,MAAM,CAACQ,IAAd;AACD,GAND,CAME,OAAOC,GAAP,EAAY;AACZN,IAAAA,OAAO,CAACO,KAAR,CAAcD,GAAd;AACA,WAAOE,SAAP;AACD;AACF,CAXD;;AAaA,MAAMC,aAAa,GAAG,MAAOC,QAAP,IAAwD;AAC5E,MAAI;AAAA;;AACF,UAAMb,MAAM,GAAG,MAAMF,UAAU,CAACgB,IAAX,CAAgB,aAAhB,EAA+BD,QAA/B,EAAyC;AAC5DE,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OADmD;AAI5Db,MAAAA,eAAe,EAAE;AAJ2C,KAAzC,CAArB;AAMAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ,EAPE,CAQF;;AACA,QAAI,qBAAAA,MAAM,CAACK,OAAP,sEAAgBC,MAAhB,MAA2B,GAA/B,EAAoC,MAAMC,KAAK,CAAC,aAAD,CAAX;AACpC,WAAOP,MAAM,CAACQ,IAAd;AACD,GAXD,CAWE,OAAOC,GAAP,EAAY;AACZN,IAAAA,OAAO,CAACO,KAAR,CAAcD,GAAd;AACA,WAAOE,SAAP;AACD;AACF,CAhBD;;AAkBA,MAAMK,WAAW,GAAG,MAAOC,QAAP,IAA0D;AAC5Ed,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;;AACA,MAAI;AAAA;;AACF,UAAMJ,MAAM,GAAG,MAAMF,UAAU,CAACgB,IAAX,CAAgB,WAAhB,EAA6BG,QAA7B,EAAuC;AAC1DF,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OADiD;AAI1Db,MAAAA,eAAe,EAAE;AAJyC,KAAvC,CAArB;AAMAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ,EAAoB,YAApB,EAPE,CAQF;;AACA,QAAI,qBAAAA,MAAM,CAACK,OAAP,sEAAgBC,MAAhB,MAA2B,GAA/B,EAAoC,MAAMC,KAAK,CAAC,aAAD,CAAX;AACpC,WAAOP,MAAM,CAACQ,IAAd;AACD,GAXD,CAWE,OAAOC,GAAP,EAAY;AACZN,IAAAA,OAAO,CAACO,KAAR,CAAcD,GAAd;AACA,WAAOE,SAAP;AACD;AACF,CAjBD;;AAmBA,SAASZ,UAAT,EAAqBa,aAArB,EAAoCI,WAApC","sourcesContent":["import { backendAPI } from './apiBases';\n\nconst getHousing = async (): Promise<any[] | undefined> => {\n  try {\n    const result = await backendAPI.get('/getRoom', { withCredentials: true });\n    console.log(result);\n    // handle errors\n    if (result.request?.status !== 200) throw Error('Bad request');\n    return result.data;\n  } catch (err) {\n    console.error(err);\n    return undefined;\n  }\n};\n\nconst searchHousing = async (roomJson: string): Promise<any[] | undefined> => {\n  try {\n    const result = await backendAPI.post('/searchRoom', roomJson, {\n      headers: {\n        'content-type': 'application/json',\n      },\n      withCredentials: true,\n    });\n    console.log(result);\n    // handle errors\n    if (result.request?.status !== 200) throw Error('Bad request');\n    return result.data;\n  } catch (err) {\n    console.error(err);\n    return undefined;\n  }\n};\n\nconst postHousing = async (roomForm: FormData): Promise<any[] | undefined> => {\n  console.log('get called');\n  try {\n    const result = await backendAPI.post('/postRoom', roomForm, {\n      headers: {\n        'content-type': 'multipart/form-data',\n      },\n      withCredentials: true,\n    });\n    console.log(result, 'get result');\n    // handle errors\n    if (result.request?.status !== 201) throw Error('Bad request');\n    return result.data;\n  } catch (err) {\n    console.error(err);\n    return undefined;\n  }\n};\n\nexport { getHousing, searchHousing, postHousing };\n"]},"metadata":{},"sourceType":"module"}