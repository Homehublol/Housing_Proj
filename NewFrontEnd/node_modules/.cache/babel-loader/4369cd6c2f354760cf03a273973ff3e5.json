{"ast":null,"code":"var _jsxFileName = \"/Users/yijianzong/Documents/GitHub/Housing_Proj/NewFrontEnd/src/components/HousingPostForm/PostPage4.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { preferencesIcons } from '../../assets/icons/all';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { setPost, selectPost } from '../../redux/slices/posting';\nimport { useSelector, useDispatch } from 'react-redux';\nconst facilties = ['parking', 'privateBath', 'elevator', 'gym', 'hardwood', 'grocery', 'patio', 'pool', 'washerDryer', 'furnished'];\nconst other = ['female', 'male', 'pets', 'LGBTQ', '_420', 'earlyBird', 'livingRoomPeople', 'nightOwl', 'noSmoke'];\n\nconst OtherOptions = () => {\n  const currentPost = useSelector(selectPost);\n  const dispatch = useDispatch();\n  const [preferences, setPreferences] = useState({\n    female: false,\n    male: false,\n    LGBTQ: false,\n    parking: false,\n    pets: false,\n    privateBath: false,\n    _420: false,\n    earlyBird: false,\n    elevator: false,\n    furnished: false,\n    grocery: false,\n    gym: false,\n    hardwood: false,\n    livingRoomPeople: false,\n    nightOwl: false,\n    noSmoke: false,\n    patio: false,\n    pool: false,\n    washerDryer: false\n  });\n  const objs = ['female', 'male', 'parking', 'pets', 'LGBTQ', 'privateBath', '_420', 'earlyBird', 'elevator', 'furnished', 'grocery', 'gym', 'hardwood', 'livingRoomPeople', 'nightOwl', 'noSmoke', 'patio', 'pool', 'washerDryer']; // dispatch preferences to store\n\n  useEffect(() => {\n    dispatch(setPost(['facilities', facilties.filter(pref => preferences[pref])]));\n    dispatch(setPost(['other', other.filter(pref => preferences[pref])]));\n  }, [preferences]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"post-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, \"..other requests~\"))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, objs.map(key => {\n    // Typescript bullshit\n    const PreferencesChosenIconKey = `${key}Chosen`;\n    const PreferencesNotChosenIconKey = key;\n    const PreferenceIconChosenTagName = preferencesIcons[PreferencesChosenIconKey];\n    const PreferenceIconNotChosenTagName = preferencesIcons[PreferencesNotChosenIconKey]; // ripped from Filter\n\n    return /*#__PURE__*/React.createElement(Col, {\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-filter\",\n      onClick: () => {\n        setPreferences({ ...preferences,\n          [key]: !preferences[key]\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }\n    }, preferences[key] ? /*#__PURE__*/React.createElement(PreferenceIconChosenTagName, {\n      className: \"d-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 19\n      }\n    }) : /*#__PURE__*/React.createElement(PreferenceIconNotChosenTagName, {\n      className: \"d-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 19\n      }\n    })));\n  })));\n};\n\nexport default OtherOptions;","map":{"version":3,"sources":["/Users/yijianzong/Documents/GitHub/Housing_Proj/NewFrontEnd/src/components/HousingPostForm/PostPage4.tsx"],"names":["React","useState","useEffect","Button","preferencesIcons","Container","Row","Col","setPost","selectPost","useSelector","useDispatch","facilties","other","OtherOptions","currentPost","dispatch","preferences","setPreferences","female","male","LGBTQ","parking","pets","privateBath","_420","earlyBird","elevator","furnished","grocery","gym","hardwood","livingRoomPeople","nightOwl","noSmoke","patio","pool","washerDryer","objs","filter","pref","map","key","PreferencesChosenIconKey","PreferencesNotChosenIconKey","PreferenceIconChosenTagName","PreferenceIconNotChosenTagName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { preferencesIcons } from '../../assets/icons/all';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { setPost, selectPost } from '../../redux/slices/posting';\nimport { useSelector, useDispatch } from 'react-redux';\n\ninterface Preferences {\n  female: boolean;\n  male: boolean;\n  LGBTQ: boolean;\n  parking: boolean;\n  pets: boolean;\n  privateBath: boolean;\n  _420: boolean;\n  earlyBird: boolean;\n  elevator: boolean;\n  furnished: boolean;\n  grocery: boolean;\n  gym: boolean;\n  hardwood: boolean;\n  livingRoomPeople: boolean;\n  nightOwl: boolean;\n  noSmoke: boolean;\n  patio: boolean;\n  pool: boolean;\n  washerDryer: boolean;\n}\n\nconst facilties: Array<keyof Preferences> = [\n  'parking',\n  'privateBath',\n  'elevator',\n  'gym',\n  'hardwood',\n  'grocery',\n  'patio',\n  'pool',\n  'washerDryer',\n  'furnished',\n];\n\nconst other: Array<keyof Preferences> = [\n  'female',\n  'male',\n  'pets',\n  'LGBTQ',\n  '_420',\n  'earlyBird',\n  'livingRoomPeople',\n  'nightOwl',\n  'noSmoke',\n];\n\nconst OtherOptions: React.FC<{}> = () => {\n  const currentPost = useSelector(selectPost);\n  const dispatch = useDispatch();\n  const [preferences, setPreferences] = useState<Preferences>({\n    female: false,\n    male: false,\n    LGBTQ: false,\n    parking: false,\n    pets: false,\n    privateBath: false,\n    _420: false,\n    earlyBird: false,\n    elevator: false,\n    furnished: false,\n    grocery: false,\n    gym: false,\n    hardwood: false,\n    livingRoomPeople: false,\n    nightOwl: false,\n    noSmoke: false,\n    patio: false,\n    pool: false,\n    washerDryer: false,\n  });\n\n  const objs: Array<keyof Preferences> = [\n    'female',\n    'male',\n    'parking',\n    'pets',\n    'LGBTQ',\n    'privateBath',\n    '_420',\n    'earlyBird',\n    'elevator',\n    'furnished',\n    'grocery',\n    'gym',\n    'hardwood',\n    'livingRoomPeople',\n    'nightOwl',\n    'noSmoke',\n    'patio',\n    'pool',\n    'washerDryer',\n  ];\n  // dispatch preferences to store\n  useEffect(() => {\n    dispatch(\n      setPost(['facilities', facilties.filter((pref) => preferences[pref])]),\n    );\n    dispatch(setPost(['other', other.filter((pref) => preferences[pref])]));\n  }, [preferences]);\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <span className=\"post-title\">..other requests~</span>\n        </Col>\n      </Row>\n      <Row>\n        {objs.map((key: keyof Preferences) => {\n          // Typescript bullshit\n          const PreferencesChosenIconKey: keyof typeof preferencesIcons = `${key}Chosen` as keyof typeof preferencesIcons;\n          const PreferencesNotChosenIconKey: keyof typeof preferencesIcons = key as keyof typeof preferencesIcons;\n          const PreferenceIconChosenTagName: React.FunctionComponent<\n            React.SVGProps<SVGSVGElement> & {\n              title?: string | undefined;\n            }\n          > = preferencesIcons[PreferencesChosenIconKey];\n          const PreferenceIconNotChosenTagName: React.FunctionComponent<\n            React.SVGProps<SVGSVGElement> & {\n              title?: string | undefined;\n            }\n          > = preferencesIcons[PreferencesNotChosenIconKey];\n\n          // ripped from Filter\n          return (\n            <Col md={5}>\n              <Button\n                className=\"btn-filter\"\n                onClick={() => {\n                  setPreferences({\n                    ...preferences,\n                    [key]: !preferences[key],\n                  });\n                }}\n              >\n                {preferences[key] ? (\n                  <PreferenceIconChosenTagName className=\"d-block\" />\n                ) : (\n                  <PreferenceIconNotChosenTagName className=\"d-block\" />\n                )}\n              </Button>\n            </Col>\n          );\n        })}\n      </Row>\n    </Container>\n  );\n};\n\nexport default OtherOptions;\n"]},"metadata":{},"sourceType":"module"}