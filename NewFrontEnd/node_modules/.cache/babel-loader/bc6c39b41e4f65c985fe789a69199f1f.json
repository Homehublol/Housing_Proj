{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  posts: []\n};\nexport const housingSlice = createSlice({\n  name: 'housing',\n  initialState,\n  reducers: {\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    setHousingPosts: (state, action) => {\n      state.posts = action.payload;\n    }\n  }\n});\nexport const {\n  setHousingPosts\n} = housingSlice.actions; // thunks below\n\nexport const updateHousingPosts = apiCall => dispatch => {\n  // await simulation\n  apiCall().then(response => {\n    dispatch(setHousingPosts(response ? response.map(room => ({\n      name: room['name'],\n      pricePerMonth: room['pricePerMonth'],\n      roomType: room['roomType'],\n      early: room['early'],\n      late: room['late'],\n      distance: room['distance'],\n      location: room['location'],\n      photo: room['photo'],\n      profilePhoto: room['profilePhoto'],\n      stayPeriod: room['stayPeriod'],\n      leaserName: room['leaserName'],\n      leaserSchoolYear: room['leaserSchoolYear'],\n      leaserMajor: room['leaserMajor'],\n      leaserIntro: room['leaserIntro'],\n      leaserEmail: room['leaserEmail'],\n      leaserPhone: room['leaserPhone'],\n      other: room['other'],\n      facilities: room['facilities']\n    })) : []));\n  });\n};\nexport const selectingHousingPosts = state => state.housing.posts;\nexport default housingSlice.reducer;","map":{"version":3,"sources":["/Users/yijianzong/Documents/GitHub/Housing_Proj/NewFrontEnd/src/redux/slices/housing.ts"],"names":["createSlice","initialState","posts","housingSlice","name","reducers","setHousingPosts","state","action","payload","actions","updateHousingPosts","apiCall","dispatch","then","response","map","room","pricePerMonth","roomType","early","late","distance","location","photo","profilePhoto","stayPeriod","leaserName","leaserSchoolYear","leaserMajor","leaserIntro","leaserEmail","leaserPhone","other","facilities","selectingHousingPosts","housing","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAQA,MAAMC,YAA0B,GAAG;AACjCC,EAAAA,KAAK,EAAE;AAD0B,CAAnC;AAMA,OAAO,MAAMC,YAAY,GAAGH,WAAW,CAAC;AACtCI,EAAAA,IAAI,EAAE,SADgC;AAEtCH,EAAAA,YAFsC;AAGtCI,EAAAA,QAAQ,EAAE;AACR;AACAC,IAAAA,eAAe,EAAE,CAACC,KAAD,EAAQC,MAAR,KAA+C;AAC9DD,MAAAA,KAAK,CAACL,KAAN,GAAcM,MAAM,CAACC,OAArB;AACD;AAJO;AAH4B,CAAD,CAAhC;AAWP,OAAO,MAAM;AAAEH,EAAAA;AAAF,IAAsBH,YAAY,CAACO,OAAzC,C,CAEP;;AACA,OAAO,MAAMC,kBAAkB,GAAIC,OAAD,IAChCC,QADuE,IAEpE;AACH;AACAD,EAAAA,OAAO,GAAGE,IAAV,CAAgBC,QAAD,IAAmB;AAChCF,IAAAA,QAAQ,CACNP,eAAe,CACbS,QAAQ,GACJA,QAAQ,CAACC,GAAT,CAAcC,IAAD,KAAgB;AAC3Bb,MAAAA,IAAI,EAAEa,IAAI,CAAC,MAAD,CADiB;AAE3BC,MAAAA,aAAa,EAAED,IAAI,CAAC,eAAD,CAFQ;AAG3BE,MAAAA,QAAQ,EAAEF,IAAI,CAAC,UAAD,CAHa;AAI3BG,MAAAA,KAAK,EAAEH,IAAI,CAAC,OAAD,CAJgB;AAK3BI,MAAAA,IAAI,EAAEJ,IAAI,CAAC,MAAD,CALiB;AAM3BK,MAAAA,QAAQ,EAAEL,IAAI,CAAC,UAAD,CANa;AAO3BM,MAAAA,QAAQ,EAAEN,IAAI,CAAC,UAAD,CAPa;AAQ3BO,MAAAA,KAAK,EAAEP,IAAI,CAAC,OAAD,CARgB;AAS3BQ,MAAAA,YAAY,EAAER,IAAI,CAAC,cAAD,CATS;AAU3BS,MAAAA,UAAU,EAAET,IAAI,CAAC,YAAD,CAVW;AAW3BU,MAAAA,UAAU,EAAEV,IAAI,CAAC,YAAD,CAXW;AAY3BW,MAAAA,gBAAgB,EAAEX,IAAI,CAAC,kBAAD,CAZK;AAa3BY,MAAAA,WAAW,EAAEZ,IAAI,CAAC,aAAD,CAbU;AAc3Ba,MAAAA,WAAW,EAAEb,IAAI,CAAC,aAAD,CAdU;AAe3Bc,MAAAA,WAAW,EAAEd,IAAI,CAAC,aAAD,CAfU;AAgB3Be,MAAAA,WAAW,EAAEf,IAAI,CAAC,aAAD,CAhBU;AAiB3BgB,MAAAA,KAAK,EAAEhB,IAAI,CAAC,OAAD,CAjBgB;AAkB3BiB,MAAAA,UAAU,EAAEjB,IAAI,CAAC,YAAD;AAlBW,KAAhB,CAAb,CADI,GAqBJ,EAtBS,CADT,CAAR;AA0BD,GA3BD;AA4BD,CAhCM;AAkCP,OAAO,MAAMkB,qBAAqB,GAAI5B,KAAD,IAAsBA,KAAK,CAAC6B,OAAN,CAAclC,KAAlE;AAEP,eAAeC,YAAY,CAACkC,OAA5B","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { AppThunk, RootState } from '../store';\nimport { PathProps } from '../../components/HouseCard';\n\ninterface HousingState {\n  posts: PathProps[];\n}\n\nconst initialState: HousingState = {\n  posts: [],\n};\n\nexport type HousingAPICall = () => any;\n\nexport const housingSlice = createSlice({\n  name: 'housing',\n  initialState,\n  reducers: {\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    setHousingPosts: (state, action: PayloadAction<PathProps[]>) => {\n      state.posts = action.payload;\n    },\n  },\n});\n\nexport const { setHousingPosts } = housingSlice.actions;\n\n// thunks below\nexport const updateHousingPosts = (apiCall: HousingAPICall): AppThunk => (\n  dispatch,\n) => {\n  // await simulation\n  apiCall().then((response: any) => {\n    dispatch(\n      setHousingPosts(\n        response\n          ? response.map((room: any) => ({\n              name: room['name'],\n              pricePerMonth: room['pricePerMonth'],\n              roomType: room['roomType'],\n              early: room['early'],\n              late: room['late'],\n              distance: room['distance'],\n              location: room['location'],\n              photo: room['photo'],\n              profilePhoto: room['profilePhoto'],\n              stayPeriod: room['stayPeriod'],\n              leaserName: room['leaserName'],\n              leaserSchoolYear: room['leaserSchoolYear'],\n              leaserMajor: room['leaserMajor'],\n              leaserIntro: room['leaserIntro'],\n              leaserEmail: room['leaserEmail'],\n              leaserPhone: room['leaserPhone'],\n              other: room['other'],\n              facilities: room['facilities'],\n            }))\n          : [],\n      ),\n    );\n  });\n};\n\nexport const selectingHousingPosts = (state: RootState) => state.housing.posts;\n\nexport default housingSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}