{"ast":null,"code":"var _jsxFileName = \"/Users/yijianzong/Documents/GitHub/Housing_Proj/NewFrontEnd/src/components/ProfileModal.tsx\";\nimport React, { useState } from 'react';\nimport { Button, Col, Container, Form, Modal, Row } from 'react-bootstrap';\nimport Dropdown from './basics/Dropdown';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Image from 'react-bootstrap/Image';\nimport { majors } from '../assets/constants';\nimport { miscIcons, profileIcons } from '../assets/icons/all';\nimport { selectUser, selectUserDraft, setUserDraft, logout, editProfile } from '../redux/slices/auth';\nimport { dummyUser } from '../assets/models/User';\nconst nonSelectStyle = 'profile-word-sub';\nconst selectStyle = 'profile-word-sub profile-word-sub-selected';\nconst nonSelectBg = 'profile-word-sub-bg';\nconst SelectBg = 'profile-word-sub-bg profile-word-sub-bg-selected';\n\nconst phoneFormat = (phone, previousPhone) => {\n  const phoneRegex = /\\d+/;\n  const charArray = [];\n  const limit = 14;\n  let i;\n\n  for (i = 0; i < Math.min(phone.length, limit); i++) {\n    if (phone[i].match(phoneRegex)) {\n      charArray.push(phone[i]);\n    }\n  }\n\n  if (previousPhone.length > phone.length && // if it is a delete operation\n  phone.length > 0 && // if it is non empty\n  !previousPhone[previousPhone.length - 1].match(phoneRegex)) {\n    charArray.pop();\n  }\n\n  const bracket = charArray.length >= 3;\n  const space = charArray.length > 3;\n  const horizontal = charArray.length > 6;\n\n  if (horizontal) {\n    charArray.splice(6, 0, '-');\n  }\n\n  if (space) {\n    charArray.splice(3, 0, ' ');\n  }\n\n  if (bracket) {\n    charArray.splice(0, 0, '(');\n    charArray.splice(4, 0, ')');\n  }\n\n  return charArray.join('');\n}; // Will only be called during confirmation\n\n\nconst generateUpdates = (original, draft) => {\n  const updatePairs = {};\n  const updateKeys = Object.keys(original).filter(key => original[key] !== draft[key]);\n  updateKeys.forEach(key => updatePairs[key] = draft[key]);\n  return updatePairs;\n}; // use this before implementing pulling user-created posts from BE\n\n\nconst dummyPosts = [{\n  name: 'Const Verde Village',\n  roomType: 'Single',\n  price: '$800'\n}];\n\nconst ProfileModal = ({\n  show,\n  setShow\n}) => {\n  const userSelected = useSelector(selectUser) || dummyUser;\n  const userSelectedDraft = useSelector(selectUserDraft) || dummyUser;\n  const dispatch = useDispatch();\n  const [activeIndicator, setactiveIndicator] = useState(true);\n  const [editPosts, setEditPosts] = useState(false);\n  return /*#__PURE__*/React.createElement(Modal, {\n    dialogClassName: \"profile-form-modal-dialog\",\n    show: show,\n    onHide: () => setShow(false),\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"h-100 w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"no-show\",\n    className: \"profile-cross\",\n    onClick: () => setShow(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(miscIcons.orangeX, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    className: \"profile-form-top-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `title${editPosts ? '' : ' profile-selected'}`,\n    onClick: () => setEditPosts(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, \"Profile\", !editPosts && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"element\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 28\n    }\n  }, \"_____\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title-divider mx-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, \"|\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: `title${editPosts ? ' profile-selected' : ''}`,\n    onClick: () => setEditPosts(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, \"Manage my posts\", editPosts && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"element\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 27\n    }\n  }, \"_____________\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-form-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"h-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"h-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    className: \"align-self-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: \"https://houseit.s3.us-east-2.amazonaws.com/ambar%40ucsd.edu/profile/Mask+Group-1.jpg\" // TODO shouldnt use constant for the src\n    ,\n    roundedCircle: true,\n    className: \"profile-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, \"Jacob Jones\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-verified\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(profileIcons.tickMark, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 19\n    }\n  }), \"UCSD Email Verified\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"profile-sign-out\",\n    variant: \"no-show\",\n    onClick: () => {\n      dispatch(logout());\n      setShow(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 19\n    }\n  }, \"Log Out\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-5 profile-edit-wrap profile-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, activeIndicator ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: () => setactiveIndicator(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }\n  }, \"Edit Profile\") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: () => {\n      const updates = generateUpdates(userSelected, userSelectedDraft); // if nothing changes upon confirm, no need to send to backend\n\n      if (!(Object.keys(updates).length === 0 && updates.constructor === Object)) {\n        dispatch(editProfile(userSelected.email, userSelectedDraft, generateUpdates(userSelected, userSelectedDraft), setactiveIndicator));\n      } else {\n        setactiveIndicator(true);\n      } // TODO: display error if fails at backend\n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 25\n    }\n  }, \"Confirm\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-1 profile-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"profile-cancel\",\n    variant: \"no-show\",\n    onClick: () => {\n      setactiveIndicator(true);\n      dispatch(setUserDraft(userSelected));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 25\n    }\n  }, \"Cancel\"))))), /*#__PURE__*/React.createElement(Col, {\n    md: 8,\n    className: editPosts ? 'profile-posts-list' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 15\n    }\n  }, !editPosts ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Row, {\n    className: \"justify-content-center m-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"profileEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    className: \"profile-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 25\n    }\n  }, \"School Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n    className: \"single-line-input\",\n    type: \"email\",\n    disabled: true,\n    value: userSelectedDraft.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"profilePhone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    className: \"profile-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 25\n    }\n  }, \"Phone\"), /*#__PURE__*/React.createElement(Form.Control, {\n    readOnly: activeIndicator,\n    className: \"single-line-input\",\n    type: \"text\",\n    value: userSelectedDraft.phone,\n    onChange: event => {\n      console.log(userSelected, 'hello');\n      const previousPhone = userSelectedDraft.phone;\n      dispatch(setUserDraft({ ...userSelectedDraft,\n        phone: phoneFormat(event.target.value, previousPhone)\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Row, {\n    className: \"m-2 px-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"profileSchoolYear\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    className: \"profile-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 25\n    }\n  }, \"School Year\"), /*#__PURE__*/React.createElement(Form.Row, {\n    className: \"profile-year-row pl-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 25\n    }\n  }, ['First', 'Sophomore', 'Junior', 'Senior', 'Fifth', 'Grad'].map(year => /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: `profileSchoolYear${year}`,\n    className: userSelectedDraft.schoolYear === year ? SelectBg : nonSelectBg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    className: userSelectedDraft.schoolYear === year ? selectStyle : nonSelectStyle,\n    onClick: () => {\n      dispatch(setUserDraft({ ...userSelectedDraft,\n        schoolYear: year\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 31\n    }\n  }, year)))))), /*#__PURE__*/React.createElement(Form.Row, {\n    className: \"m-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"profileMajor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    className: \"profile-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 25\n    }\n  }, \"Major\"), /*#__PURE__*/React.createElement(Dropdown, {\n    options: majors,\n    label: \"\",\n    onSelect: s => dispatch(setUserDraft({ ...userSelectedDraft,\n      major: s || userSelectedDraft.major\n    })),\n    initialSelected: userSelectedDraft.major,\n    placeholder: \"Major\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Row, {\n    className: \"m-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"profileBio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    className: \"profile-form-bio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 25\n    }\n  }, \"Tell us about yourself in a short bio\"), /*#__PURE__*/React.createElement(Form.Control, {\n    readOnly: activeIndicator,\n    as: \"textarea\",\n    className: \"single-line-input profile-bio-text\",\n    type: \"text\",\n    maxLength: 600,\n    value: userSelectedDraft.description,\n    onChange: event => dispatch(setUserDraft({ ...userSelectedDraft,\n      description: event.target.value\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"profile-char-check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 25\n    }\n  }, userSelectedDraft.description.length, \"/600\")))) : /*#__PURE__*/React.createElement(React.Fragment, null, dummyPosts.length == 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-no-posts-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 23\n    }\n  }, \"You don't have any housing posts yet.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 25\n    }\n  }), \"Are you looking for your Bookmarks instead?\") : dummyPosts.map(post => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"m-2 profile-mypost\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: \"https://houseit.s3.us-east-2.amazonaws.com/test0.png\",\n    className: \"profile-mypost-picture\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-mypost-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-mypost-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 29\n    }\n  }, post.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-mypost-details mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 29\n    }\n  }, post.roomType, \" | \", post.price), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-auto profile-mypost-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    className: \"w-90\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 31\n    }\n  }, \"Mark as occupied\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml-auto profile-mypost-edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 31\n    }\n  }, \"Edit this post\"))))))))))));\n};\n\nexport default ProfileModal;","map":{"version":3,"sources":["/Users/yijianzong/Documents/GitHub/Housing_Proj/NewFrontEnd/src/components/ProfileModal.tsx"],"names":["React","useState","Button","Col","Container","Form","Modal","Row","Dropdown","useSelector","useDispatch","Image","majors","miscIcons","profileIcons","selectUser","selectUserDraft","setUserDraft","logout","editProfile","dummyUser","nonSelectStyle","selectStyle","nonSelectBg","SelectBg","phoneFormat","phone","previousPhone","phoneRegex","charArray","limit","i","Math","min","length","match","push","pop","bracket","space","horizontal","splice","join","generateUpdates","original","draft","updatePairs","updateKeys","Object","keys","filter","key","forEach","dummyPosts","name","roomType","price","ProfileModal","show","setShow","userSelected","userSelectedDraft","dispatch","activeIndicator","setactiveIndicator","editPosts","setEditPosts","updates","constructor","email","event","console","log","target","value","map","year","schoolYear","s","major","description","post"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Col, Container, Form, Modal, Row } from 'react-bootstrap';\nimport Dropdown from './basics/Dropdown';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Image from 'react-bootstrap/Image';\nimport { majors } from '../assets/constants';\nimport { miscIcons, profileIcons } from '../assets/icons/all';\nimport {\n  selectUser,\n  selectUserDraft,\n  setUserDraft,\n  logout,\n  editProfile,\n} from '../redux/slices/auth';\n\nimport { User, dummyUser } from '../assets/models/User';\n\nconst nonSelectStyle = 'profile-word-sub';\nconst selectStyle = 'profile-word-sub profile-word-sub-selected';\nconst nonSelectBg = 'profile-word-sub-bg';\nconst SelectBg = 'profile-word-sub-bg profile-word-sub-bg-selected';\n\ninterface PathProps {\n  show: boolean;\n  setShow: (show: boolean) => void;\n}\n\nconst phoneFormat = (phone: string, previousPhone: string) => {\n  const phoneRegex = /\\d+/;\n  const charArray = [];\n  const limit = 14;\n  let i;\n  for (i = 0; i < Math.min(phone.length, limit); i++) {\n    if (phone[i].match(phoneRegex)) {\n      charArray.push(phone[i]);\n    }\n  }\n  if (\n    previousPhone.length > phone.length && // if it is a delete operation\n    phone.length > 0 && // if it is non empty\n    !previousPhone[previousPhone.length - 1].match(phoneRegex)\n  ) {\n    charArray.pop();\n  }\n  const bracket = charArray.length >= 3;\n  const space = charArray.length > 3;\n  const horizontal = charArray.length > 6;\n  if (horizontal) {\n    charArray.splice(6, 0, '-');\n  }\n  if (space) {\n    charArray.splice(3, 0, ' ');\n  }\n  if (bracket) {\n    charArray.splice(0, 0, '(');\n    charArray.splice(4, 0, ')');\n  }\n  return charArray.join('');\n};\n\n// Will only be called during confirmation\nconst generateUpdates = (original: User, draft: User) => {\n  const updatePairs: { [k: string]: any } = {};\n  const updateKeys = (Object.keys(original) as Array<keyof User>).filter(\n    (key) => original[key] !== draft[key],\n  );\n  updateKeys.forEach((key) => (updatePairs[key] = draft[key]));\n  return updatePairs;\n};\n\n// use this before implementing pulling user-created posts from BE\nconst dummyPosts = [\n  {\n    name: 'Const Verde Village',\n    roomType: 'Single',\n    price: '$800',\n  },\n];\n\nconst ProfileModal: React.FC<PathProps> = ({ show, setShow }) => {\n  const userSelected = useSelector(selectUser) || dummyUser;\n  const userSelectedDraft = useSelector(selectUserDraft) || dummyUser;\n  const dispatch = useDispatch();\n  const [activeIndicator, setactiveIndicator] = useState(true);\n  const [editPosts, setEditPosts] = useState(false);\n  return (\n    <Modal\n      dialogClassName=\"profile-form-modal-dialog\"\n      show={show}\n      onHide={() => setShow(false)}\n      centered\n    >\n      <div className=\"h-100 w-100\">\n        {/* TODO add border-radius to top and bottom rows */}\n        {/* TODO <div className=\"d-flex align-items-center justify-content-around h-100\"> */}\n        <Button\n          variant=\"no-show\"\n          className=\"profile-cross\"\n          onClick={() => setShow(false)}\n        >\n          <miscIcons.orangeX />\n        </Button>\n        <Row className=\"profile-form-top-bar\">\n          <div\n            className={`title${editPosts ? '' : ' profile-selected'}`}\n            onClick={() => setEditPosts(false)}\n          >\n            Profile\n            {!editPosts && <div className=\"element\">_____</div>}\n          </div>\n          <div className=\"title-divider mx-5\">|</div>\n          <span\n            className={`title${editPosts ? ' profile-selected' : ''}`}\n            onClick={() => setEditPosts(true)}\n          >\n            Manage my posts\n            {editPosts && <div className=\"element\">_____________</div>}\n          </span>\n        </Row>\n        <div className=\"profile-form-middle\">\n          <Container fluid className=\"h-100\">\n            <Row className=\"h-100\">\n              <Col md={4} className=\"align-self-center\">\n                <div className=\"profile-wrap\">\n                  <Image\n                    src=\"https://houseit.s3.us-east-2.amazonaws.com/ambar%40ucsd.edu/profile/Mask+Group-1.jpg\" // TODO shouldnt use constant for the src\n                    roundedCircle\n                    className=\"profile-icon\"\n                  />\n                </div>\n                <div className=\"profile-name\">Jacob Jones</div>\n                <div className=\"profile-verified\">\n                  <profileIcons.tickMark />\n                  UCSD Email Verified\n                </div>\n                <div className=\"profile-wrap\">\n                  <Button\n                    className=\"profile-sign-out\"\n                    variant=\"no-show\"\n                    onClick={() => {\n                      dispatch(logout());\n                      setShow(false);\n                    }}\n                  >\n                    Log Out\n                  </Button>\n                </div>\n                <div className=\"mt-5 profile-edit-wrap profile-wrap\">\n                  {activeIndicator ? (\n                    <Button\n                      variant=\"secondary\"\n                      onClick={() => setactiveIndicator(false)}\n                    >\n                      Edit Profile\n                    </Button>\n                  ) : (\n                    <div>\n                      <div>\n                        <Button\n                          variant=\"secondary\"\n                          onClick={() => {\n                            const updates = generateUpdates(\n                              userSelected,\n                              userSelectedDraft,\n                            );\n                            // if nothing changes upon confirm, no need to send to backend\n                            if (\n                              !(\n                                Object.keys(updates).length === 0 &&\n                                updates.constructor === Object\n                              )\n                            ) {\n                              dispatch(\n                                editProfile(\n                                  userSelected.email,\n                                  userSelectedDraft,\n                                  generateUpdates(\n                                    userSelected,\n                                    userSelectedDraft,\n                                  ),\n                                  setactiveIndicator,\n                                ),\n                              );\n                            } else {\n                              setactiveIndicator(true);\n                            }\n                            // TODO: display error if fails at backend\n                          }}\n                        >\n                          Confirm\n                        </Button>\n                      </div>\n                      <div className=\"mt-1 profile-wrap\">\n                        <Button\n                          className=\"profile-cancel\"\n                          variant=\"no-show\"\n                          onClick={() => {\n                            setactiveIndicator(true);\n                            dispatch(setUserDraft(userSelected));\n                          }}\n                        >\n                          Cancel\n                        </Button>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </Col>\n              <Col md={8} className={editPosts ? 'profile-posts-list' : ''}>\n                {!editPosts ? (\n                  <>\n                    <Form.Row className=\"justify-content-center m-2\">\n                      <Form.Group as={Col} controlId=\"profileEmail\">\n                        <Form.Label className=\"profile-form-label\">\n                          School Email\n                        </Form.Label>\n                        <Form.Control\n                          className=\"single-line-input\"\n                          type=\"email\"\n                          disabled\n                          value={userSelectedDraft.email}\n                        />\n                      </Form.Group>\n                      <Form.Group as={Col} controlId=\"profilePhone\">\n                        <Form.Label className=\"profile-form-label\">\n                          Phone\n                        </Form.Label>\n                        <Form.Control\n                          readOnly={activeIndicator}\n                          className=\"single-line-input\"\n                          type=\"text\"\n                          value={userSelectedDraft.phone}\n                          onChange={(event) => {\n                            console.log(userSelected, 'hello');\n                            const previousPhone = userSelectedDraft.phone;\n                            dispatch(\n                              setUserDraft({\n                                ...userSelectedDraft,\n                                phone: phoneFormat(\n                                  event.target.value,\n                                  previousPhone,\n                                ),\n                              }),\n                            );\n                          }}\n                        />\n                      </Form.Group>\n                    </Form.Row>\n\n                    <Form.Row className=\"m-2 px-0\">\n                      <Form.Group as={Col} controlId=\"profileSchoolYear\">\n                        <Form.Label className=\"profile-form-label\">\n                          School Year\n                        </Form.Label>\n                        <Form.Row className=\"profile-year-row pl-1\">\n                          {[\n                            'First',\n                            'Sophomore',\n                            'Junior',\n                            'Senior',\n                            'Fifth',\n                            'Grad',\n                          ].map((year) => (\n                            <Form.Group\n                              controlId={`profileSchoolYear${year}`}\n                              className={\n                                userSelectedDraft.schoolYear === year\n                                  ? SelectBg\n                                  : nonSelectBg\n                              }\n                            >\n                              <Form.Label\n                                className={\n                                  userSelectedDraft.schoolYear === year\n                                    ? selectStyle\n                                    : nonSelectStyle\n                                }\n                                onClick={() => {\n                                  dispatch(\n                                    setUserDraft({\n                                      ...userSelectedDraft,\n                                      schoolYear: year,\n                                    }),\n                                  );\n                                }}\n                              >\n                                {year}\n                              </Form.Label>\n                            </Form.Group>\n                          ))}\n                        </Form.Row>\n                      </Form.Group>\n                    </Form.Row>\n\n                    <Form.Row className=\"m-2\">\n                      <Form.Group as={Col} controlId=\"profileMajor\">\n                        <Form.Label className=\"profile-form-label\">\n                          Major\n                        </Form.Label>\n                        <Dropdown\n                          options={majors}\n                          label=\"\"\n                          onSelect={(s) =>\n                            dispatch(\n                              setUserDraft({\n                                ...userSelectedDraft,\n                                major: s || userSelectedDraft.major,\n                              }),\n                            )\n                          }\n                          initialSelected={userSelectedDraft.major}\n                          placeholder=\"Major\"\n                          required\n                        />\n                      </Form.Group>\n                    </Form.Row>\n                    <Form.Row className=\"m-2\">\n                      <Form.Group as={Col} controlId=\"profileBio\">\n                        <Form.Label className=\"profile-form-bio\">\n                          Tell us about yourself in a short bio\n                        </Form.Label>\n                        <Form.Control\n                          readOnly={activeIndicator}\n                          as=\"textarea\"\n                          className=\"single-line-input profile-bio-text\"\n                          type=\"text\"\n                          maxLength={600}\n                          value={userSelectedDraft.description}\n                          onChange={(event) =>\n                            dispatch(\n                              setUserDraft({\n                                ...userSelectedDraft,\n                                description: event.target.value,\n                              }),\n                            )\n                          }\n                        />\n                        <span className=\"profile-char-check\">\n                          {userSelectedDraft.description.length}/600\n                        </span>\n                      </Form.Group>\n                    </Form.Row>\n                  </>\n                ) : (\n                  <>\n                    {dummyPosts.length == 0 ? (\n                      <div className=\"profile-no-posts-text\">\n                        You don't have any housing posts yet.\n                        <br />\n                        Are you looking for your Bookmarks instead?\n                      </div>\n                    ) : (\n                      dummyPosts.map((post) => (\n                        <div className=\"m-2 profile-mypost\">\n                          <Image\n                            src=\"https://houseit.s3.us-east-2.amazonaws.com/test0.png\"\n                            className=\"profile-mypost-picture\"\n                          />\n\n                          <div className=\"profile-mypost-info\">\n                            <div className=\"profile-mypost-title\">\n                              {post.name}\n                            </div>\n                            <div className=\"profile-mypost-details mt-1\">\n                              {post.roomType} | {post.price}\n                            </div>\n\n                            <div className=\"mt-auto profile-mypost-actions\">\n                              <Button variant=\"secondary\" className=\"w-90\">\n                                Mark as occupied\n                              </Button>\n                              <div className=\"ml-auto profile-mypost-edit\">\n                                Edit this post\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      ))\n                    )}\n                  </>\n                )}\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default ProfileModal;\n"]},"metadata":{},"sourceType":"module"}