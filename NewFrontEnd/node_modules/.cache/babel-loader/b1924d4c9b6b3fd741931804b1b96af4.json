{"ast":null,"code":"var _jsxFileName = \"/Users/yijianzong/Documents/GitHub/Housing_Proj/NewFrontEnd/src/components/HousingPostForm/PostPage2.tsx\";\nimport React, { useState } from 'react';\nimport { Container, Row, Col, Button, Form } from 'react-bootstrap';\nimport { roomTypeIcons } from '../../assets/icons/all';\nimport AutoComplete from '../PlacesAutoComplete';\nimport { setPost, selectPost } from '../../redux/slices/posting';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst PostPage2 = () => {\n  const dispatch = useDispatch();\n  const [roomType, setRoomType] = useState({\n    single: false,\n    double: false,\n    triple: false,\n    livingRoom: false,\n    suite: false,\n    studio: false\n  });\n  const price = useSelector(selectPost).price;\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"post-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, \"...about the room, time & stay period\"))), /*#__PURE__*/React.createElement(Form.Row, {\n    className: \"justify-content-center m-2 my-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Location\"), /*#__PURE__*/React.createElement(AutoComplete, {\n    className: \"single-line-input w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    lg: {\n      span: 5,\n      offset: 1\n    },\n    className: \"justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Room Type\")), /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, Object.keys(roomType).map(key => {\n    const RoomTypeUnchosen = roomTypeIcons[key];\n    const RoomTypeChosen = roomTypeIcons[`${key}Chosen`];\n    return /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-filter\",\n      onClick: () => {\n        const changed = { ...roomType\n        };\n        changed[key] = !roomType[key];\n\n        if (changed[key]) {\n          dispatch(setPost(['roomType', key]));\n        }\n\n        setRoomType({ ...changed\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }\n    }, roomType[key] ? /*#__PURE__*/React.createElement(RoomTypeChosen, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 38\n      }\n    }) : /*#__PURE__*/React.createElement(RoomTypeUnchosen, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 59\n      }\n    }));\n  }))), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    lg: {\n      span: 5,\n      offset: 1\n    },\n    className: \"justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Price\")), /*#__PURE__*/React.createElement(Form.Row, {\n    className: \"justify-content-center m-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    className: \"word mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"$USD\"), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    className: \"single-line-input\",\n    type: \"number\",\n    min: 0,\n    value: price,\n    onChange: event => {\n      dispatch(setPost(['price', parseInt(event.target.value)]));\n    },\n    isValid: price !== undefined && price > 0,\n    isInvalid: price === undefined || price <= 0,\n    placeholder: \"price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    lg: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default PostPage2;","map":{"version":3,"sources":["/Users/yijianzong/Documents/GitHub/Housing_Proj/NewFrontEnd/src/components/HousingPostForm/PostPage2.tsx"],"names":["React","useState","Container","Row","Col","Button","Form","roomTypeIcons","AutoComplete","setPost","selectPost","useSelector","useDispatch","PostPage2","dispatch","roomType","setRoomType","single","double","triple","livingRoom","suite","studio","price","span","offset","Object","keys","map","key","RoomTypeUnchosen","RoomTypeChosen","changed","event","parseInt","target","value","undefined"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Container, Row, Col, Button, Form } from 'react-bootstrap';\nimport { roomTypeIcons, roomTypeUnchosen } from '../../assets/icons/all';\nimport AutoComplete from '../PlacesAutoComplete';\nimport { setPost, selectPost } from '../../redux/slices/posting';\nimport { useSelector, useDispatch } from 'react-redux';\n\ntype RoomType = { [P in keyof typeof roomTypeUnchosen]: boolean };\nconst PostPage2: React.FC<{}> = () => {\n  const dispatch = useDispatch();\n  const [roomType, setRoomType] = useState<RoomType>({\n    single: false,\n    double: false,\n    triple: false,\n    livingRoom: false,\n    suite: false,\n    studio: false,\n  });\n  const price = useSelector(selectPost).price;\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <span className=\"post-title\">\n            ...about the room, time & stay period\n          </span>\n        </Col>\n      </Row>\n\n      <Form.Row className=\"justify-content-center m-2 my-4\">\n        <Form.Label className=\"title\">Location</Form.Label>\n        <AutoComplete className=\"single-line-input w-100\" />\n      </Form.Row>\n\n      <Row className=\"justify-content-center\">\n        {/* Room Type */}\n        <Col\n          md={12}\n          lg={{ span: 5, offset: 1 }}\n          className=\"justify-content-center\"\n        >\n          <Row className=\"justify-content-center\">\n            <div className=\"title\">Room Type</div>\n          </Row>\n          <Row className=\"justify-content-center\">\n            {(Object.keys(roomType) as Array<keyof typeof roomType>).map(\n              (key) => {\n                const RoomTypeUnchosen = roomTypeIcons[key];\n                const RoomTypeChosen =\n                  roomTypeIcons[`${key}Chosen` as keyof typeof roomTypeIcons];\n                return (\n                  <Button\n                    className=\"btn-filter\"\n                    onClick={() => {\n                      const changed = { ...roomType };\n                      changed[key] = !roomType[key];\n                      if (changed[key]) {\n                        dispatch(setPost(['roomType', key]));\n                      }\n                      setRoomType({\n                        ...changed,\n                      });\n                    }}\n                  >\n                    {roomType[key] ? <RoomTypeChosen /> : <RoomTypeUnchosen />}\n                  </Button>\n                );\n              },\n            )}\n          </Row>\n        </Col>\n\n        {/* Price Range. TODO: only use one price */}\n        <Col\n          md={12}\n          lg={{ span: 5, offset: 1 }}\n          className=\"justify-content-center\"\n        >\n          <Row className=\"justify-content-center\">\n            <div className=\"title\">Price</div>\n          </Row>\n\n          <Form.Row className=\"justify-content-center m-2\">\n            <Form.Label className=\"word mr-3\">$USD</Form.Label>\n            <Col>\n              <Form.Control\n                className=\"single-line-input\"\n                type=\"number\"\n                min={0}\n                value={price}\n                onChange={(event) => {\n                  dispatch(setPost(['price', parseInt(event.target.value)]));\n                }}\n                isValid={price !== undefined && price > 0}\n                isInvalid={price === undefined || price <= 0}\n                placeholder=\"price\"\n              />\n            </Col>\n          </Form.Row>\n        </Col>\n        <Col lg={1} />\n      </Row>\n    </Container>\n  );\n};\n\nexport default PostPage2;\n"]},"metadata":{},"sourceType":"module"}