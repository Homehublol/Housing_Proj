{"ast":null,"code":"var _jsxFileName = \"/Users/yijianzong/Documents/GitHub/Housing_Proj/NewFrontEnd/src/components/HousingPostForm/PostPage2.tsx\";\nimport React from 'react';\nimport { Container, Row, Col, Form } from 'react-bootstrap';\nimport * as z from 'zod';\nimport { roomTypeIconsTemp } from '../../assets/icons/all';\nimport AutoComplete from '../PlacesAutoComplete';\nimport { RoomType } from '../../assets/constants';\nimport Dropdown from '../basics/Dropdown';\nimport ToggleGroup from '../basics/ToggleGroup';\nexport const page2Schema = z.object({\n  locationSearch: z.string(),\n  selectedLocation: z.string().nonempty('Make sure to select an address.'),\n  propertyType: z.string().nonempty('Make sure to select a property type.'),\n  // apartmentName: z.string(),\n  numBeds: z.string().nonempty('Please enter number of bedrooms.'),\n  numBaths: z.string().nonempty('Please enter number of bathrooms.'),\n  roomTypes: z.nativeEnum(RoomType)\n});\nexport const page2InitialStore = {\n  locationSearch: '',\n  selectedLocation: '',\n  propertyType: 'Townhouse',\n  // TODO\n  // apartmentName: '',\n  numBeds: '',\n  numBaths: '',\n  roomTypes: []\n};\n\nconst Page2 = ({\n  locationSearch,\n  selectedLocation,\n  propertyType,\n  // apartmentName,\n  numBeds,\n  numBaths,\n  roomTypes,\n  validations,\n  setStore\n}) => {\n  var _validations$selected, _validations$selected2, _validations$numBeds, _validations$numBeds2, _validations$numBaths, _validations$numBaths2, _validations$roomType;\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"post-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Room Information\"))), /*#__PURE__*/React.createElement(Form.Row, {\n    className: \"justify-content-center m-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AutoComplete, {\n    label: \"Address\",\n    initialAddress: locationSearch,\n    onChange: value => {\n      if (selectedLocation === '') setStore({\n        locationSearch: value\n      });else setStore({\n        locationSearch: value,\n        selectedLocation: ''\n      });\n    },\n    onSelect: value => {\n      setStore({\n        locationSearch: value,\n        selectedLocation: value\n      });\n    },\n    isValid: validations === null || validations === void 0 ? void 0 : (_validations$selected = validations.selectedLocation) === null || _validations$selected === void 0 ? void 0 : _validations$selected.success,\n    error: validations === null || validations === void 0 ? void 0 : (_validations$selected2 = validations.selectedLocation) === null || _validations$selected2 === void 0 ? void 0 : _validations$selected2.error,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Row, {\n    className: \"m-2 align-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    className: \"post-word\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"Unit Size\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"required-asterisk\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 20\n    }\n  }, \" *\")), /*#__PURE__*/React.createElement(Col, {\n    md: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    inlineText: \"Bedrooms\",\n    options: ['1', '2', '3', '4', '5', '6+'],\n    initialSelected: numBeds,\n    isValid: validations === null || validations === void 0 ? void 0 : (_validations$numBeds = validations.numBeds) === null || _validations$numBeds === void 0 ? void 0 : _validations$numBeds.success,\n    error: validations === null || validations === void 0 ? void 0 : (_validations$numBeds2 = validations.numBeds) === null || _validations$numBeds2 === void 0 ? void 0 : _validations$numBeds2.error,\n    onSelect: s => setStore({\n      numBeds: s !== null ? s : undefined\n    }),\n    noFilter: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: {\n      span: 5,\n      offset: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    inlineText: \"Bathrooms\",\n    options: ['0', '0.5', '1', '1.5', '2', '2.5', '3', '3.5', '4'],\n    initialSelected: numBaths,\n    isValid: validations === null || validations === void 0 ? void 0 : (_validations$numBaths = validations.numBaths) === null || _validations$numBaths === void 0 ? void 0 : _validations$numBaths.success,\n    error: validations === null || validations === void 0 ? void 0 : (_validations$numBaths2 = validations.numBaths) === null || _validations$numBaths2 === void 0 ? void 0 : _validations$numBaths2.error,\n    onSelect: s => setStore({\n      numBaths: s !== null ? s : undefined\n    }),\n    noFilter: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Row, {\n    className: \"m-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ToggleGroup, {\n    content: [{\n      label: RoomType.Single,\n      icon: roomTypeIconsTemp.single\n    }, {\n      label: RoomType.Double,\n      icon: roomTypeIconsTemp.double\n    }, {\n      label: RoomType.Triple,\n      icon: roomTypeIconsTemp.triple\n    }],\n    label: \"Room Type (select all that apply)\",\n    required: true,\n    initialSelected: roomTypes,\n    onSelect: ({\n      label,\n      selected\n    }) => {\n      if (selected) {\n        setStore({\n          roomTypes: roomTypes ? [...roomTypes, label] : [label]\n        });\n      } else {\n        setStore({\n          roomTypes: roomTypes === null || roomTypes === void 0 ? void 0 : roomTypes.filter(roomType => roomType !== label)\n        });\n      }\n    },\n    error: validations === null || validations === void 0 ? void 0 : (_validations$roomType = validations.roomTypes) === null || _validations$roomType === void 0 ? void 0 : _validations$roomType.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Page2;","map":{"version":3,"sources":["/Users/yijianzong/Documents/GitHub/Housing_Proj/NewFrontEnd/src/components/HousingPostForm/PostPage2.tsx"],"names":["React","Container","Row","Col","Form","z","roomTypeIconsTemp","AutoComplete","RoomType","Dropdown","ToggleGroup","page2Schema","object","locationSearch","string","selectedLocation","nonempty","propertyType","numBeds","numBaths","roomTypes","nativeEnum","page2InitialStore","Page2","validations","setStore","value","success","error","s","undefined","span","offset","label","Single","icon","single","Double","double","Triple","triple","selected","filter","roomType"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Container, Row, Col, Form } from 'react-bootstrap';\nimport * as z from 'zod';\nimport { roomTypeIconsTemp } from '../../assets/icons/all';\nimport AutoComplete from '../PlacesAutoComplete';\nimport { RoomType } from '../../assets/constants';\nimport { WizardFormStep } from '../WizardForm';\nimport Input from '../basics/Input';\nimport Dropdown from '../basics/Dropdown';\nimport ToggleGroup from '../basics/ToggleGroup';\n\nexport const page2Schema = z.object({\n  locationSearch: z.string(),\n  selectedLocation: z.string().nonempty('Make sure to select an address.'),\n  propertyType: z.string().nonempty('Make sure to select a property type.'),\n  // apartmentName: z.string(),\n  numBeds: z.string().nonempty('Please enter number of bedrooms.'),\n  numBaths: z.string().nonempty('Please enter number of bathrooms.'),\n  roomTypes: z\n    .nativeEnum(RoomType)\n});\n\nexport type Page2Store = z.infer<typeof page2Schema>;\n\nexport const page2InitialStore: Page2Store = {\n  locationSearch: '',\n  selectedLocation: '',\n  propertyType: 'Townhouse', // TODO\n  // apartmentName: '',\n  numBeds: '',\n  numBaths: '',\n  roomTypes: [],\n};\n\nconst Page2: React.FC<WizardFormStep<Page2Store>> = ({\n  locationSearch,\n  selectedLocation,\n  propertyType,\n  // apartmentName,\n  numBeds,\n  numBaths,\n  roomTypes,\n  validations,\n  setStore,\n}) => {\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <span className=\"post-title\">Room Information</span>\n        </Col>\n      </Row>\n\n      <Form.Row className=\"justify-content-center m-2\">\n        <Col>\n          {/* TODO need to check if the address is valid! Currently, if the user types something in and then clicks enter, it marks it as ok. This issue stems from an issue in PlaceAutoComplete.tsx */}\n          <AutoComplete\n            label=\"Address\"\n            initialAddress={locationSearch}\n            onChange={(value) => {\n              if (selectedLocation === '') setStore({ locationSearch: value });\n              else setStore({ locationSearch: value, selectedLocation: '' });\n            }}\n            onSelect={(value) => {\n              setStore({ locationSearch: value, selectedLocation: value });\n            }}\n            isValid={validations?.selectedLocation?.success}\n            error={validations?.selectedLocation?.error}\n            required\n          />\n        </Col>\n      </Form.Row>\n\n      <Form.Row className=\"m-2 align-bottom\">\n        <Form.Label className=\"post-word\">\n          Unit Size<span className=\"required-asterisk\"> *</span>\n        </Form.Label>\n        <Col md={5}>\n          <Dropdown\n            inlineText=\"Bedrooms\"\n            options={['1', '2', '3', '4', '5', '6+']}\n            initialSelected={numBeds}\n            isValid={validations?.numBeds?.success}\n            error={validations?.numBeds?.error}\n            onSelect={(s) => setStore({ numBeds: s !== null ? s : undefined })}\n            noFilter\n          />\n        </Col>\n        <Col md={{ span: 5, offset: 1 }}>\n          <Dropdown\n            inlineText=\"Bathrooms\"\n            options={['0', '0.5', '1', '1.5', '2', '2.5', '3', '3.5', '4']}\n            initialSelected={numBaths}\n            isValid={validations?.numBaths?.success}\n            error={validations?.numBaths?.error}\n            onSelect={(s) => setStore({ numBaths: s !== null ? s : undefined })}\n            noFilter\n          />\n        </Col>\n      </Form.Row>\n\n      <Form.Row className=\"m-2\">\n        <ToggleGroup\n          content={[\n            { label: RoomType.Single, icon: roomTypeIconsTemp.single },\n            { label: RoomType.Double, icon: roomTypeIconsTemp.double },\n            { label: RoomType.Triple, icon: roomTypeIconsTemp.triple },\n          ]}\n          label=\"Room Type (select all that apply)\"\n          required\n          initialSelected={roomTypes}\n          onSelect={({ label, selected }) => {\n            if (selected) {\n              setStore({\n                roomTypes: roomTypes\n                  ? [...roomTypes, label as RoomType]\n                  : [label as RoomType],\n              });\n            } else {\n              setStore({\n                roomTypes: roomTypes?.filter((roomType) => roomType !== label),\n              });\n            }\n          }}\n          error={validations?.roomTypes?.error}\n        />\n      </Form.Row>\n    </Container>\n  );\n};\n\nexport default Page2 as React.FC;\n"]},"metadata":{},"sourceType":"module"}