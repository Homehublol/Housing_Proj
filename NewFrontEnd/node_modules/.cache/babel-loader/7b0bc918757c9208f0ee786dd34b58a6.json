{"ast":null,"code":"var _jsxFileName = \"/Users/yijianzong/Documents/GitHub/Housing_Proj/NewFrontEnd/src/components/Filter.tsx\";\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FilterForm from './FilterForm';\nimport { filterIcons } from '../assets/icons/all';\nimport { selectShowFilter, setShow } from '../redux/slices/filter';\n\nconst Separator = () => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"d-flex justify-content-center my-5\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"separator\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }\n}));\n\nconst formatRequest = (pref, rt, earlyInterval, earlyMonth, lateInterval, lateMonth, monthCount, minute, price, numBaths) => {\n  const roomSelections = ['Single', 'Double', 'Triple', 'LivingRoom', 'Suite', 'Studio'];\n  const otherPrefs = ['female', 'male', 'lgbtq', 'pets', '_420'];\n  const facilities = ['parking', 'privateBath'];\n  const roomResult = [];\n  const selectedRooms = roomSelections.reduce((result, roomSelection) => {\n    if (rt[roomSelection]) {\n      result.push(roomSelection);\n    }\n\n    return roomResult;\n  }, roomResult);\n  const selectedOther = otherPrefs.reduce((otherResult, otherPref) => {\n    if (pref[otherPref]) {\n      otherResult.push(otherPref);\n    }\n\n    return otherResult;\n  }, []);\n  const selectedFac = facilities.reduce((facResult, otherPref) => {\n    if (pref[otherPref]) {\n      facResult.push(otherPref);\n    }\n\n    return facResult;\n  }, []);\n  return {\n    distance: `${minute} mins`,\n    roomType: selectedRooms,\n    earlyInterval,\n    earlyMonth,\n    lateInterval,\n    lateMonth,\n    stayPeriod: monthCount,\n    priceMin: price.minimum,\n    priceMax: price.maximum,\n    other: selectedOther,\n    facilities: selectedFac\n  };\n};\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const showFilter = useSelector(selectShowFilter);\n\n  const setShowFilter = value => dispatch(setShow(value));\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter-launch-pad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(filterIcons.hello, {\n    className: \"disappear-on-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(filterIcons.arrow, {\n    className: \"disappear-on-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setShowFilter(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, \"Find your place\"), /*#__PURE__*/React.createElement(filterIcons.arrow, {\n    className: \"disappear-on-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(filterIcons.loveHouse, {\n    className: \"disappear-on-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FilterForm, {\n    show: showFilter,\n    setShow: setShowFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Filter;","map":{"version":3,"sources":["/Users/yijianzong/Documents/GitHub/Housing_Proj/NewFrontEnd/src/components/Filter.tsx"],"names":["React","Button","useDispatch","useSelector","FilterForm","filterIcons","selectShowFilter","setShow","Separator","formatRequest","pref","rt","earlyInterval","earlyMonth","lateInterval","lateMonth","monthCount","minute","price","numBaths","roomSelections","otherPrefs","facilities","roomResult","selectedRooms","reduce","result","roomSelection","push","selectedOther","otherResult","otherPref","selectedFac","facResult","distance","roomType","stayPeriod","priceMin","minimum","priceMax","maximum","other","Filter","dispatch","showFilter","setShowFilter","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Form from 'react-bootstrap/Form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FilterForm from './FilterForm';\nimport {\n  roomTypeIcons,\n  filterIcons,\n  preferencesIcons,\n} from '../assets/icons/all';\nimport { intervalOptions, yearMonths } from '../assets/constants';\nimport { moveInSelect } from '../assets/utils/index';\nimport {\n  FilterModel,\n  PreferenceLiteralType,\n  Preferences,\n  RoomLiteralType,\n} from '../assets/models/FilterModel';\nimport { searchHousingPosts } from '../redux/slices/housing';\nimport { selectShowFilter, setShow } from '../redux/slices/filter';\n\ntype RoomType = { [P in RoomLiteralType]: boolean };\n\ninterface Price {\n  minimum: number;\n  maximum: number;\n}\n\nconst Separator: React.FC<React.HTMLAttributes<JSX.Element>> = () => (\n  <div className=\"d-flex justify-content-center my-5\">\n    <div className=\"separator\" />\n  </div>\n);\n\nconst formatRequest = (\n  pref: Preferences,\n  rt: RoomType,\n  earlyInterval: string,\n  earlyMonth: string,\n  lateInterval: string,\n  lateMonth: string,\n  monthCount: number,\n  minute: number,\n  price: Price,\n  numBaths:num\n): FilterModel => {\n  const roomSelections: RoomLiteralType[] = [\n    'Single',\n    'Double',\n    'Triple',\n    'LivingRoom',\n    'Suite',\n    'Studio',\n  ];\n  const otherPrefs: PreferenceLiteralType[] = [\n    'female',\n    'male',\n    'lgbtq',\n    'pets',\n    '_420',\n  ];\n  const facilities: PreferenceLiteralType[] = ['parking', 'privateBath'];\n  const roomResult: RoomLiteralType[] = [];\n  const selectedRooms = roomSelections.reduce((result, roomSelection) => {\n    if (rt[roomSelection]) {\n      result.push(roomSelection);\n    }\n    return roomResult;\n  }, roomResult);\n  const selectedOther = otherPrefs.reduce<PreferenceLiteralType[]>(\n    (otherResult, otherPref) => {\n      if (pref[otherPref]) {\n        otherResult.push(otherPref);\n      }\n      return otherResult;\n    },\n    [],\n  );\n  const selectedFac = facilities.reduce<PreferenceLiteralType[]>(\n    (facResult, otherPref) => {\n      if (pref[otherPref]) {\n        facResult.push(otherPref);\n      }\n      return facResult;\n    },\n    [],\n  );\n  return {\n    distance: `${minute} mins`,\n    roomType: selectedRooms,\n    earlyInterval,\n    earlyMonth,\n    lateInterval,\n    lateMonth,\n    stayPeriod: monthCount,\n    priceMin: price.minimum,\n    priceMax: price.maximum,\n    other: selectedOther,\n    facilities: selectedFac,\n  };\n};\n\nconst Filter: React.FC<{}> = () => {\n  const dispatch = useDispatch();\n  const showFilter = useSelector(selectShowFilter);\n  const setShowFilter = (value: boolean) => dispatch(setShow(value));\n\n  return (\n    <>\n      {/* Header in the home page */}\n      <div className=\"filter-launch-pad\">\n        <filterIcons.hello className=\"disappear-on-sm\" />\n        <filterIcons.arrow className=\"disappear-on-sm\" />\n        <Button onClick={() => setShowFilter(true)}>Find your place</Button>\n        <filterIcons.arrow className=\"disappear-on-sm\" />\n        <filterIcons.loveHouse className=\"disappear-on-sm\" />\n      </div>\n\n      {/* The filter itself */}\n      <FilterForm show={showFilter} setShow={setShowFilter} />\n    </>\n  );\n};\n\nexport default Filter;\n"]},"metadata":{},"sourceType":"module"}