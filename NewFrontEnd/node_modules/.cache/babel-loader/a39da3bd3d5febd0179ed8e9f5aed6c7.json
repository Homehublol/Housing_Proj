{"ast":null,"code":"var _jsxFileName = \"/Users/yijianzong/Documents/GitHub/Housing_Proj/NewFrontEnd/src/components/GoogleMap.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\n\nconst AnyReactComponent = ({\n  text\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 46\n  }\n}, text);\n\nconst GoogleMap = ({\n  address\n}) => {\n  const [center, setCenter] = useState({\n    lat: 11.0168,\n    lng: 76.9558\n  });\n  const [zoom, setZoom] = useState(11);\n  const code = geocodeByAddress(address);\n  const location = code.then(results => getLatLng(results[0]));\n  useEffect(() => {\n    location.then(longlat => {\n      setCenter(longlat);\n      console.log(center);\n    });\n  }, [center]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '25%',\n      minHeight: '40vh',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMapReact, {\n    bootstrapURLKeys: {\n      key: 'AIzaSyDP7ZDv6xGzfVe7y7Sgb3MsYMqCVLNljeY'\n    } // TODO put key in an .env\n    ,\n    center: center,\n    defaultZoom: zoom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AnyReactComponent, {\n    lat: center.lat,\n    lng: center.lng,\n    text: \"I am Here!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default GoogleMap;","map":{"version":3,"sources":["/Users/yijianzong/Documents/GitHub/Housing_Proj/NewFrontEnd/src/components/GoogleMap.tsx"],"names":["React","useEffect","useState","GoogleMapReact","geocodeByAddress","getLatLng","AnyReactComponent","text","GoogleMap","address","center","setCenter","lat","lng","zoom","setZoom","code","location","then","results","longlat","console","log","height","minHeight","width","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,gBAAT,EAA2BC,SAA3B,QAA4C,2BAA5C;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAMA,IAAN,CAA7C;;AAKA,MAAMC,SAA8B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACtD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC;AAAEU,IAAAA,GAAG,EAAE,OAAP;AAAgBC,IAAAA,GAAG,EAAE;AAArB,GAAD,CAApC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMc,IAAI,GAAGZ,gBAAgB,CAACK,OAAD,CAA7B;AACA,QAAMQ,QAAQ,GAAGD,IAAI,CAACE,IAAL,CAAWC,OAAD,IAAad,SAAS,CAACc,OAAO,CAAC,CAAD,CAAR,CAAhC,CAAjB;AACAlB,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,QAAQ,CAACC,IAAT,CAAeE,OAAD,IAAa;AACzBT,MAAAA,SAAS,CAACS,OAAD,CAAT;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYZ,MAAZ;AACD,KAHD;AAID,GALQ,EAKN,CAACA,MAAD,CALM,CAAT;AAMA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEa,MAAAA,MAAM,EAAE,KAAV;AAAiBC,MAAAA,SAAS,EAAE,MAA5B;AAAoCC,MAAAA,KAAK,EAAE;AAA3C,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AACE,IAAA,gBAAgB,EAAE;AAAEC,MAAAA,GAAG,EAAE;AAAP,KADpB,CACwE;AADxE;AAEE,IAAA,MAAM,EAAEhB,MAFV;AAGE,IAAA,WAAW,EAAEI,IAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,iBAAD;AACE,IAAA,GAAG,EAAEJ,MAAM,CAACE,GADd;AAEE,IAAA,GAAG,EAAEF,MAAM,CAACG,GAFd;AAGE,IAAA,IAAI,EAAC,YAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CADF;AAeD,CA1BD;;AA4BA,eAAeL,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\n\nconst AnyReactComponent = ({ text }: any) => <div>{text}</div>;\n\ninterface PathProps {\n  address: string;\n}\nconst GoogleMap: React.FC<PathProps> = ({ address }) => {\n  const [center, setCenter] = useState({ lat: 11.0168, lng: 76.9558 });\n  const [zoom, setZoom] = useState(11);\n  const code = geocodeByAddress(address);\n  const location = code.then((results) => getLatLng(results[0]));\n  useEffect(() => {\n    location.then((longlat) => {\n      setCenter(longlat);\n      console.log(center);\n    });\n  }, [center]);\n  return (\n    <div style={{ height: '25%', minHeight: '40vh', width: '100%' }}>\n      <GoogleMapReact\n        bootstrapURLKeys={{ key: 'AIzaSyDP7ZDv6xGzfVe7y7Sgb3MsYMqCVLNljeY' }} // TODO put key in an .env\n        center={center}\n        defaultZoom={zoom}\n      >\n        <AnyReactComponent\n          lat={center.lat}\n          lng={center.lng}\n          text=\"I am Here!\"\n        />\n      </GoogleMapReact>\n    </div>\n  );\n};\n\nexport default GoogleMap;\n"]},"metadata":{},"sourceType":"module"}