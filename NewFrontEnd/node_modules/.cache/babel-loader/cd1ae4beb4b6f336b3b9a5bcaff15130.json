{"ast":null,"code":"var _jsxFileName = \"/Users/yijianzong/Documents/GitHub/Housing_Proj/NewFrontEnd/src/components/HousingPostForm/PostPage3.tsx\";\nimport React from 'react';\nimport { Container, Row, Col, Dropdown, Form } from 'react-bootstrap';\nimport { intervalOptions, yearMonths } from '../../assets/constants';\nimport { moveInSelect } from '../../assets/utils/index';\nimport { setPost, selectPost } from '../../redux/slices/posting';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst PostPage3 = () => {\n  const stayPeriod = useSelector(selectPost).stayPeriod;\n  const earlyInterval = useSelector(selectPost).earlyInterval;\n  const earlyMonth = useSelector(selectPost).earlyMonth;\n  const lateInterval = useSelector(selectPost).lateInterval;\n  const lateMonth = useSelector(selectPost).lateMonth;\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    lg: 6,\n    className: \"justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, \"Move in time\")), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"word notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, \"As early as\")), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    id: \"dropdown-basic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }, earlyInterval), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, intervalOptions.map(interval => /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: interval,\n    onSelect: event => dispatch(setPost(['earlyInterval', event])),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 19\n    }\n  }, interval)))), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    className: \"clear-border\",\n    as: Dropdown,\n    isValid: moveInSelect(earlyMonth, earlyInterval, lateMonth, lateInterval),\n    isInvalid: !moveInSelect(earlyMonth, earlyInterval, lateMonth, lateInterval),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    className: \"form-dropdown ml-0\",\n    id: \"dropdown-basic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, earlyMonth), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    className: \"menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, yearMonths.map(month => /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: month,\n    onSelect: event => dispatch(setPost(['earlyMonth', event])),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, month)))), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, \"Looks good!\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, \"Invalid value!\"))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"word notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"As late as \")), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    id: \"dropdown-basic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, lateInterval), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, intervalOptions.map(interval => /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: interval,\n    onSelect: event => dispatch(setPost(['lateInterval', event])),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }\n  }, interval)))), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    className: \"clear-border\",\n    as: Dropdown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    className: \"form-dropdown ml-0\",\n    id: \"dropdown-basic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, lateMonth), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    className: \"menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, yearMonths.map(month => /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: month,\n    onSelect: event => dispatch(setPost(['lateMonth', event])),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, month)))), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, \"Looks good!\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, \"Invalid Value!\")))), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    lg: {\n      span: 5,\n      offset: 1\n    },\n    className: \"justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, \"Stay period\")), /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Row,\n    controlId: \"formNumberOfMonths\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 8,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    className: \"single-line-input\",\n    value: stayPeriod,\n    onChange: event => dispatch(setPost(['stayPeriod', parseInt(event.target.value)])),\n    type: \"number\",\n    placeholder: \"# of Months\",\n    isValid: stayPeriod > 0 && stayPeriod <= 12,\n    isInvalid: stayPeriod <= 0 || stayPeriod > 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"word\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }, \"Month(s)\")))))));\n};\n\nexport default PostPage3;","map":{"version":3,"sources":["/Users/yijianzong/Documents/GitHub/Housing_Proj/NewFrontEnd/src/components/HousingPostForm/PostPage3.tsx"],"names":["React","Container","Row","Col","Dropdown","Form","intervalOptions","yearMonths","moveInSelect","setPost","selectPost","useSelector","useDispatch","PostPage3","stayPeriod","earlyInterval","earlyMonth","lateInterval","lateMonth","dispatch","map","interval","event","month","span","offset","parseInt","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Container, Row, Col, Dropdown, Form } from 'react-bootstrap';\nimport { intervalOptions, yearMonths } from '../../assets/constants';\nimport { moveInSelect } from '../../assets/utils/index';\nimport { setPost, selectPost } from '../../redux/slices/posting';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst PostPage3: React.FC<{}> = () => {\n  const stayPeriod = useSelector(selectPost).stayPeriod;\n  const earlyInterval = useSelector(selectPost).earlyInterval;\n  const earlyMonth = useSelector(selectPost).earlyMonth;\n  const lateInterval = useSelector(selectPost).lateInterval;\n  const lateMonth = useSelector(selectPost).lateMonth;\n  const dispatch = useDispatch();\n  return (\n    <Container>\n      <Row className=\"justify-content-center\">\n        {/* Move in time */}\n        <Col md={12} lg={6} className=\"justify-content-center\">\n          <Row className=\"justify-content-center\">\n            <div className=\"title\">Move in time</div>\n          </Row>\n\n          <Row>\n            <span className=\"word notes\">As early as</span>\n          </Row>\n          <Row>\n            <Dropdown>\n              <Dropdown.Toggle id=\"dropdown-basic\">\n                {earlyInterval}\n              </Dropdown.Toggle>\n              <Dropdown.Menu>\n                {intervalOptions.map((interval) => (\n                  <Dropdown.Item\n                    eventKey={interval}\n                    onSelect={(event) =>\n                      dispatch(setPost(['earlyInterval', event]))\n                    }\n                  >\n                    {interval}\n                  </Dropdown.Item>\n                ))}\n              </Dropdown.Menu>\n            </Dropdown>\n            <Form.Group>\n              <Form.Control\n                className=\"clear-border\"\n                as={Dropdown}\n                isValid={moveInSelect(\n                  earlyMonth,\n                  earlyInterval,\n                  lateMonth,\n                  lateInterval,\n                )}\n                isInvalid={\n                  !moveInSelect(\n                    earlyMonth,\n                    earlyInterval,\n                    lateMonth,\n                    lateInterval,\n                  )\n                }\n              >\n                <Dropdown.Toggle\n                  className=\"form-dropdown ml-0\"\n                  id=\"dropdown-basic\"\n                >\n                  {earlyMonth}\n                </Dropdown.Toggle>\n                <Dropdown.Menu className=\"menu\">\n                  {yearMonths.map((month) => (\n                    <Dropdown.Item\n                      eventKey={month}\n                      onSelect={(event) =>\n                        dispatch(setPost(['earlyMonth', event]))\n                      }\n                    >\n                      {month}\n                    </Dropdown.Item>\n                  ))}\n                </Dropdown.Menu>\n              </Form.Control>\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              <Form.Control.Feedback type=\"invalid\">\n                Invalid value!\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Row>\n\n          <Row>\n            <span className=\"word notes\">As late as </span>\n          </Row>\n          <Row>\n            <Dropdown>\n              <Dropdown.Toggle id=\"dropdown-basic\">\n                {lateInterval}\n              </Dropdown.Toggle>\n              <Dropdown.Menu>\n                {intervalOptions.map((interval) => (\n                  <Dropdown.Item\n                    eventKey={interval}\n                    onSelect={(event) =>\n                      dispatch(setPost(['lateInterval', event]))\n                    }\n                  >\n                    {interval}\n                  </Dropdown.Item>\n                ))}\n              </Dropdown.Menu>\n            </Dropdown>\n            <Form.Group>\n              <Form.Control className=\"clear-border\" as={Dropdown}>\n                <Dropdown.Toggle\n                  className=\"form-dropdown ml-0\"\n                  id=\"dropdown-basic\"\n                >\n                  {lateMonth}\n                </Dropdown.Toggle>\n                <Dropdown.Menu className=\"menu\">\n                  {yearMonths.map((month) => (\n                    <Dropdown.Item\n                      eventKey={month}\n                      onSelect={(event) =>\n                        dispatch(setPost(['lateMonth', event]))\n                      }\n                    >\n                      {month}\n                    </Dropdown.Item>\n                  ))}\n                </Dropdown.Menu>\n              </Form.Control>\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              <Form.Control.Feedback type=\"invalid\">\n                Invalid Value!\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Row>\n        </Col>\n\n        <Col\n          md={12}\n          lg={{ span: 5, offset: 1 }}\n          className=\"justify-content-center\"\n        >\n          <Row className=\"justify-content-center\">\n            <div className=\"title\">Stay period</div>\n          </Row>\n          <Row className=\"justify-content-center\">\n            <Col>\n              <Form.Group as={Row} controlId=\"formNumberOfMonths\">\n                <Col sm={8} md={8}>\n                  <Form.Control\n                    className=\"single-line-input\"\n                    value={stayPeriod}\n                    onChange={(event) =>\n                      dispatch(\n                        setPost(['stayPeriod', parseInt(event.target.value)]),\n                      )\n                    }\n                    type=\"number\"\n                    placeholder=\"# of Months\"\n                    isValid={stayPeriod > 0 && stayPeriod <= 12}\n                    isInvalid={stayPeriod <= 0 || stayPeriod > 12}\n                  />\n                </Col>\n                <span className=\"word\">Month(s)</span>\n              </Form.Group>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default PostPage3;\n"]},"metadata":{},"sourceType":"module"}