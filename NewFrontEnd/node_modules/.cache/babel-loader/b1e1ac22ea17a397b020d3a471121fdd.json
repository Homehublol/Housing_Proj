{"ast":null,"code":"var _jsxFileName = \"/Users/yijianzong/Documents/GitHub/Housing_Proj/NewFrontEnd/src/components/HousingPostForm/index.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectUser } from '../../redux/slices/auth';\nimport { newHousingPost } from '../../redux/slices/housing';\nimport { dummyUser } from '../../assets/models/User';\nimport HouseProfile from '../HouseProfile';\nimport Page2, { page2InitialStore, page2Schema } from './PostPage2';\nimport Page3, { page3InitialStore, page3Schema } from './PostPage3';\nimport Page4, { page4InitialStore, page4Schema } from './PostPage4';\nimport Page5, { page5InitialStore, page5Schema } from './PostPage5';\nimport Page6, { page6InitialStore, page6Schema } from './PostPage6';\nimport WizardForm from '../WizardForm';\n// Page1Store &\nconst initialStore = [page2InitialStore, page3InitialStore, page4InitialStore, page5InitialStore, page6InitialStore];\nconst schemas = [page2Schema, page3Schema, page4Schema, page5Schema, page6Schema];\nconst tempEmptyHouseData = {\n  // TODO temporary. shouldn't need this eventually\n  name: 'Loading...',\n  location: 'Loading...',\n  distance: 'Loading...',\n  pricePerMonth: 0,\n  stayPeriod: 12,\n  early: 'Loading...',\n  late: 'Loading...',\n  roomType: 'Loading...',\n  photos: [],\n  other: [],\n  facilities: [],\n  negotiable: false,\n  numBeds: 0,\n  numBaths: 0\n};\n\nconst storeToHouseData = ({\n  propertyType,\n  selectedLocation,\n  price,\n  stayPeriod,\n  earlyInterval,\n  earlyMonth,\n  lateInterval,\n  lateMonth,\n  numBeds,\n  numBaths,\n  roomTypes,\n  pictures,\n  preferences,\n  amenities\n}) => {\n  return {\n    name: propertyType,\n    location: selectedLocation,\n    distance: '___ min',\n    // will calculate the minutes in the API post, showing as '___'\n    pricePerMonth: price,\n    stayPeriod,\n    early: `${earlyInterval} ${earlyMonth}`,\n    late: `${lateInterval} ${lateMonth}`,\n    roomType: roomTypes[0],\n    // TODO need to change database to hold array of strings\n    numBeds: parseInt(numBeds),\n    numBaths: parseInt(numBaths),\n    photos: pictures.map(picture => URL.createObjectURL(picture)),\n    // TODO need to change a ton of things to be able to display files as well as strings pictures,\n    other: preferences,\n    facilities: amenities,\n    negotiable: false // TODO not in the house post yet\n\n  };\n};\n\nconst userToHousePostUser = ({\n  name,\n  email,\n  phone,\n  major,\n  schoolYear,\n  description\n}) => ({\n  leaserName: name,\n  leaserEmail: email,\n  leaserPhone: phone,\n  leaserSchoolYear: schoolYear,\n  leaserIntro: description,\n  leaserMajor: major,\n  profilePhoto: '' // TODO need to actually have profile photo here\n\n});\n\nconst HousingPost = ({\n  show,\n  setShow\n}) => {\n  const [showPreview, setShowPreview] = useState(false);\n  const [previewData, setPreviewData] = useState();\n  const [houseData, setHouseData] = useState();\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (previewData) setHouseData(storeToHouseData(previewData));\n  }, [previewData]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(HouseProfile, Object.assign({\n    show: showPreview,\n    onHide: () => {\n      setShowPreview(false);\n      setShow(true);\n    }\n  }, tempEmptyHouseData, houseData, userToHousePostUser(user || dummyUser), {\n    localURL: true,\n    aboveModalContent: /*#__PURE__*/React.createElement(\"div\", {\n      className: \"house-post-preview-buttons-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: () => {\n        setShowPreview(false);\n        setShow(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, \"Edit Post\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: () => {\n        if (houseData) {\n          setShowPreview(false);\n          dispatch(newHousingPost({ ...houseData,\n            photos: previewData === null || previewData === void 0 ? void 0 : previewData.pictures\n          }));\n        } // TODO need to reset the form here\n\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, \"Publish Post\")),\n    aboveModalContentClassName: \"house-post-preview-buttons\",\n    modalClassName: \"house-post-preview-modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(WizardForm, {\n    show: show,\n    setShow: setShow,\n    onSubmit: data => {\n      console.log('clicked');\n      console.log(data);\n      setPreviewData(data);\n      setShowPreview(true); // dispatch(\n      //   userPost(() => postHousing(FormMation(pictures, posts))),\n      // ); // TODO\n\n      return true;\n    },\n    title: \"Make your post\",\n    initialStore: initialStore,\n    schemas: schemas,\n    lastButtonText: \"Preview\" // TODO customLastButton={\n    //   <Button\n    //     variant=\"secondary\"\n    //     className=\"m-0\"\n    //     onClick={() => {\n    //       setShowPreview(true);\n    //     }}\n    //   >\n    //     Preview\n    //   </Button>\n    // }\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Page2, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Page3, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Page4, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Page5, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Page6, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default HousingPost;","map":{"version":3,"sources":["/Users/yijianzong/Documents/GitHub/Housing_Proj/NewFrontEnd/src/components/HousingPostForm/index.tsx"],"names":["React","useEffect","useState","Button","useSelector","useDispatch","selectUser","newHousingPost","dummyUser","HouseProfile","Page2","page2InitialStore","page2Schema","Page3","page3InitialStore","page3Schema","Page4","page4InitialStore","page4Schema","Page5","page5InitialStore","page5Schema","Page6","page6InitialStore","page6Schema","WizardForm","initialStore","schemas","tempEmptyHouseData","name","location","distance","pricePerMonth","stayPeriod","early","late","roomType","photos","other","facilities","negotiable","numBeds","numBaths","storeToHouseData","propertyType","selectedLocation","price","earlyInterval","earlyMonth","lateInterval","lateMonth","roomTypes","pictures","preferences","amenities","parseInt","map","picture","URL","createObjectURL","userToHousePostUser","email","phone","major","schoolYear","description","leaserName","leaserEmail","leaserPhone","leaserSchoolYear","leaserIntro","leaserMajor","profilePhoto","HousingPost","show","setShow","showPreview","setShowPreview","previewData","setPreviewData","houseData","setHouseData","user","dispatch","data","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectUser } from '../../redux/slices/auth';\nimport { newHousingPost } from '../../redux/slices/housing';\nimport { dummyUser, User } from '../../assets/models/User';\nimport HouseProfile, { facilityToIcon } from '../HouseProfile';\nimport Page2, { Page2Store, page2InitialStore, page2Schema } from './PostPage2';\nimport Page3, { Page3Store, page3InitialStore, page3Schema } from './PostPage3';\nimport Page4, { Page4Store, page4InitialStore, page4Schema } from './PostPage4';\nimport Page5, { Page5Store, page5InitialStore, page5Schema } from './PostPage5';\nimport Page6, { Page6Store, page6InitialStore, page6Schema } from './PostPage6';\nimport WizardForm from '../WizardForm';\nimport {\n  CreateHousePostProperties,\n  HousePostUserData,\n} from '../../assets/models/PostModels';\n\ntype Store = Page2Store & Page3Store & Page4Store & Page5Store & Page6Store; // Page1Store &\n\nconst initialStore = [\n  page2InitialStore,\n  page3InitialStore,\n  page4InitialStore,\n  page5InitialStore,\n  page6InitialStore,\n];\n\nconst schemas = [\n  page2Schema,\n  page3Schema,\n  page4Schema,\n  page5Schema,\n  page6Schema,\n];\n\ninterface HousingPostProps {\n  show: boolean;\n  setShow: (show: boolean) => void;\n}\n\nconst tempEmptyHouseData: Omit<CreateHousePostProperties, 'photos'> & {\n  photos: string[];\n} = {\n  // TODO temporary. shouldn't need this eventually\n  name: 'Loading...',\n  location: 'Loading...',\n  distance: 'Loading...',\n  pricePerMonth: 0,\n  stayPeriod: 12,\n  early: 'Loading...',\n  late: 'Loading...',\n  roomType: 'Loading...',\n  photos: [],\n  other: [],\n  facilities: [],\n  negotiable: false,\n  numBeds: 0,\n  numBaths: 0,\n};\n\nconst storeToHouseData = ({\n  propertyType,\n  selectedLocation,\n  price,\n  stayPeriod,\n  earlyInterval,\n  earlyMonth,\n  lateInterval,\n  lateMonth,\n  numBeds,\n  numBaths,\n  roomTypes,\n  pictures,\n  preferences,\n  amenities,\n}: Store): Omit<CreateHousePostProperties, 'photos'> & { photos: string[] } => {\n  return {\n    name: propertyType,\n    location: selectedLocation,\n    distance: '___ min', // will calculate the minutes in the API post, showing as '___'\n    pricePerMonth: price,\n    stayPeriod,\n    early: `${earlyInterval} ${earlyMonth}`,\n    late: `${lateInterval} ${lateMonth}`,\n    roomType: roomTypes[0], // TODO need to change database to hold array of strings\n    numBeds: parseInt(numBeds),\n    numBaths: parseInt(numBaths),\n    photos: pictures.map((picture) => URL.createObjectURL(picture)), // TODO need to change a ton of things to be able to display files as well as strings pictures,\n    other: preferences,\n    facilities: amenities as (keyof typeof facilityToIcon)[],\n    negotiable: false, // TODO not in the house post yet\n  };\n};\n\nconst userToHousePostUser = ({\n  name,\n  email,\n  phone,\n  major,\n  schoolYear,\n  description,\n}: User): HousePostUserData => ({\n  leaserName: name,\n  leaserEmail: email,\n  leaserPhone: phone,\n  leaserSchoolYear: schoolYear,\n  leaserIntro: description,\n  leaserMajor: major,\n  profilePhoto: '', // TODO need to actually have profile photo here\n});\n\nconst HousingPost: React.FC<HousingPostProps> = ({ show, setShow }) => {\n  const [showPreview, setShowPreview] = useState<boolean>(false);\n  const [previewData, setPreviewData] = useState<Store>();\n  const [houseData, setHouseData] = useState<\n    Omit<CreateHousePostProperties, 'photos'> & { photos: string[] }\n  >();\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (previewData) setHouseData(storeToHouseData(previewData));\n  }, [previewData]);\n\n  return (\n    <>\n      <HouseProfile\n        show={showPreview}\n        onHide={() => {\n          setShowPreview(false);\n          setShow(true);\n        }}\n        {...tempEmptyHouseData}\n        {...houseData}\n        {...userToHousePostUser(user || dummyUser)}\n        localURL\n        aboveModalContent={\n          <div className=\"house-post-preview-buttons-wrapper\">\n            <Button\n              variant=\"secondary\"\n              onClick={() => {\n                setShowPreview(false);\n                setShow(true);\n              }}\n            >\n              Edit Post\n            </Button>\n            <Button\n              variant=\"secondary\"\n              onClick={() => {\n                if (houseData) {\n                  setShowPreview(false);\n                  dispatch(\n                    newHousingPost({\n                      ...houseData,\n                      photos: previewData?.pictures as File[],\n                    }),\n                  );\n                }\n\n                // TODO need to reset the form here\n              }}\n            >\n              Publish Post\n            </Button>\n          </div>\n        }\n        aboveModalContentClassName=\"house-post-preview-buttons\"\n        modalClassName=\"house-post-preview-modal\"\n      />\n\n      <WizardForm<Store>\n        show={show}\n        setShow={setShow}\n        onSubmit={(data) => {\n          console.log('clicked');\n          console.log(data);\n          setPreviewData(data);\n          setShowPreview(true);\n          // dispatch(\n          //   userPost(() => postHousing(FormMation(pictures, posts))),\n          // ); // TODO\n          return true;\n        }}\n        title=\"Make your post\"\n        initialStore={initialStore}\n        schemas={schemas}\n        lastButtonText=\"Preview\"\n        // TODO customLastButton={\n        //   <Button\n        //     variant=\"secondary\"\n        //     className=\"m-0\"\n        //     onClick={() => {\n        //       setShowPreview(true);\n        //     }}\n        //   >\n        //     Preview\n        //   </Button>\n        // }\n      >\n        <Page2 />\n        <Page3 />\n        <Page4 />\n        <Page5 />\n        <Page6 />\n      </WizardForm>\n    </>\n  );\n};\n\nexport default HousingPost;\n"]},"metadata":{},"sourceType":"module"}