{"ast":null,"code":"var _jsxFileName = \"/Users/yijianzong/Documents/GitHub/Housing_Proj/NewFrontEnd/src/components/FilterForm/FilterPage5.tsx\";\nimport React from 'react';\nimport { Container, Row, Form } from 'react-bootstrap';\nimport * as z from 'zod';\nimport { largeAmenitiesIcons, amenitiesTranslations } from '../../assets/icons/all';\nimport ToggleGroup from '../basics/ToggleGroup';\nexport const page5Schema = z.object({\n  amenities: z.string().array()\n});\nexport const page5InitialStore = {\n  amenities: []\n};\n\nconst FilterPage5 = ({\n  amenities,\n  setStore\n}) => {\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-center m-2 my-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"Amenities\")), /*#__PURE__*/React.createElement(Form.Row, {\n    className: \"m-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ToggleGroup, {\n    toggleClassName: \"house-post-amenities-toggle\",\n    content: Object.keys(largeAmenitiesIcons).map(key => ({\n      label: amenitiesTranslations[key],\n      icon: largeAmenitiesIcons[key]\n    })),\n    initialSelected: amenities,\n    onSelect: ({\n      label,\n      selected\n    }) => {\n      if (selected) {\n        setStore({\n          amenities: amenities ? [...amenities, label] : [label]\n        });\n      } else {\n        setStore({\n          amenities: amenities === null || amenities === void 0 ? void 0 : amenities.filter(amenity => amenity !== label)\n        });\n      }\n    },\n    center: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default FilterPage5;","map":{"version":3,"sources":["/Users/yijianzong/Documents/GitHub/Housing_Proj/NewFrontEnd/src/components/FilterForm/FilterPage5.tsx"],"names":["React","Container","Row","Form","z","largeAmenitiesIcons","amenitiesTranslations","ToggleGroup","page5Schema","object","amenities","string","array","page5InitialStore","FilterPage5","setStore","Object","keys","map","key","label","icon","selected","filter","amenity"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,IAAzB,QAAqC,iBAArC;AACA,OAAO,KAAKC,CAAZ,MAAmB,KAAnB;AACA,SACEC,mBADF,EAEEC,qBAFF,QAGO,wBAHP;AAKA,OAAOC,WAAP,MAAwB,uBAAxB;AAIA,OAAO,MAAMC,WAAW,GAAGJ,CAAC,CAACK,MAAF,CAAS;AAClCC,EAAAA,SAAS,EAAEN,CAAC,CAACO,MAAF,GAAWC,KAAX;AADuB,CAAT,CAApB;AAMP,OAAO,MAAMC,iBAA6B,GAAG;AAC3CH,EAAAA,SAAS,EAAE;AADgC,CAAtC;;AAIP,MAAMI,WAAiD,GAAG,CAAC;AACzDJ,EAAAA,SADyD;AAEzDK,EAAAA;AAFyD,CAAD,KAGpD;AACJ,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,eAKE,oBAAC,IAAD,CAAM,GAAN;AAAU,IAAA,SAAS,EAAC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AACE,IAAA,eAAe,EAAC,6BADlB;AAEE,IAAA,OAAO,EAAGC,MAAM,CAACC,IAAP,CAAYZ,mBAAZ,CAAD,CAAgDa,GAAhD,CACNC,GAAD,KAAU;AACRC,MAAAA,KAAK,EAAEd,qBAAqB,CAACa,GAAD,CADpB;AAERE,MAAAA,IAAI,EAAEhB,mBAAmB,CAACc,GAAD;AAFjB,KAAV,CADO,CAFX;AAQE,IAAA,eAAe,EAAET,SARnB;AASE,IAAA,QAAQ,EAAE,CAAC;AAAEU,MAAAA,KAAF;AAASE,MAAAA;AAAT,KAAD,KAAyB;AACjC,UAAIA,QAAJ,EAAc;AACZP,QAAAA,QAAQ,CAAC;AACPL,UAAAA,SAAS,EAAEA,SAAS,GAAG,CAAC,GAAGA,SAAJ,EAAeU,KAAf,CAAH,GAA2B,CAACA,KAAD;AADxC,SAAD,CAAR;AAGD,OAJD,MAIO;AACLL,QAAAA,QAAQ,CAAC;AACPL,UAAAA,SAAS,EAAEA,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAEa,MAAX,CAAmBC,OAAD,IAAaA,OAAO,KAAKJ,KAA3C;AADJ,SAAD,CAAR;AAGD;AACF,KAnBH;AAoBE,IAAA,MAAM,MApBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,CADF;AAgCD,CApCD;;AAsCA,eAAeN,WAAf","sourcesContent":["import React from 'react';\nimport { Container, Row, Form } from 'react-bootstrap';\nimport * as z from 'zod';\nimport {\n  largeAmenitiesIcons,\n  amenitiesTranslations,\n} from '../../assets/icons/all';\nimport { WizardFormStep } from '../WizardForm';\nimport ToggleGroup from '../basics/ToggleGroup';\n\ntype Amenity = keyof typeof largeAmenitiesIcons;\n\nexport const page5Schema = z.object({\n  amenities: z.string().array(),\n});\n\nexport type Page5Store = z.infer<typeof page5Schema>;\n\nexport const page5InitialStore: Page5Store = {\n  amenities: [],\n};\n\nconst FilterPage5: React.FC<WizardFormStep<Page5Store>> = ({\n  amenities,\n  setStore,\n}) => {\n  return (\n    <Container>\n      <Row className=\"justify-content-center m-2 my-4\">\n        <div className=\"post-title\">Amenities</div>\n      </Row>\n\n      <Form.Row className=\"m-2\">\n        <ToggleGroup\n          toggleClassName=\"house-post-amenities-toggle\"\n          content={(Object.keys(largeAmenitiesIcons) as [Amenity]).map(\n            (key) => ({\n              label: amenitiesTranslations[key],\n              icon: largeAmenitiesIcons[key],\n            }),\n          )}\n          initialSelected={amenities}\n          onSelect={({ label, selected }) => {\n            if (selected) {\n              setStore({\n                amenities: amenities ? [...amenities, label] : [label],\n              });\n            } else {\n              setStore({\n                amenities: amenities?.filter((amenity) => amenity !== label),\n              });\n            }\n          }}\n          center\n        />\n      </Form.Row>\n    </Container>\n  );\n};\n\nexport default FilterPage5 as React.FC;\n"]},"metadata":{},"sourceType":"module"}