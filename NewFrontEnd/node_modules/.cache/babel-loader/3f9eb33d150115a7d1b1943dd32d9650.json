{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isScalar = void 0;\n\nvar _1 = require(\".\");\n\nvar util_1 = require(\"./helpers/util\");\n\nvar isScalar = function (schema, params) {\n  if (params === void 0) {\n    params = {\n      root: true\n    };\n  }\n\n  var def = schema._def;\n  var returnValue = false;\n\n  switch (def.t) {\n    case _1.ZodTypes.string:\n      returnValue = true;\n      break;\n\n    case _1.ZodTypes.number:\n      returnValue = true;\n      break;\n\n    case _1.ZodTypes.bigint:\n      returnValue = true;\n      break;\n\n    case _1.ZodTypes.boolean:\n      returnValue = true;\n      break;\n\n    case _1.ZodTypes.undefined:\n      returnValue = true;\n      break;\n\n    case _1.ZodTypes.null:\n      returnValue = true;\n      break;\n\n    case _1.ZodTypes.any:\n      returnValue = false;\n      break;\n\n    case _1.ZodTypes.unknown:\n      returnValue = false;\n      break;\n\n    case _1.ZodTypes.never:\n      returnValue = false;\n      break;\n\n    case _1.ZodTypes.void:\n      returnValue = false;\n      break;\n\n    case _1.ZodTypes.array:\n      if (params.root === false) return false;\n      returnValue = exports.isScalar(def.type, {\n        root: false\n      });\n      break;\n\n    case _1.ZodTypes.object:\n      returnValue = false;\n      break;\n\n    case _1.ZodTypes.union:\n      returnValue = def.options.every(function (x) {\n        return exports.isScalar(x);\n      });\n      break;\n\n    case _1.ZodTypes.intersection:\n      returnValue = exports.isScalar(def.left) && exports.isScalar(def.right);\n      break;\n\n    case _1.ZodTypes.tuple:\n      returnValue = def.items.every(function (x) {\n        return exports.isScalar(x, {\n          root: false\n        });\n      });\n      break;\n\n    case _1.ZodTypes.lazy:\n      returnValue = exports.isScalar(def.getter());\n      break;\n\n    case _1.ZodTypes.literal:\n      returnValue = true;\n      break;\n\n    case _1.ZodTypes.enum:\n      returnValue = true;\n      break;\n\n    case _1.ZodTypes.nativeEnum:\n      returnValue = true;\n      break;\n\n    case _1.ZodTypes.function:\n      returnValue = false;\n      break;\n\n    case _1.ZodTypes.record:\n      returnValue = false;\n      break;\n\n    case _1.ZodTypes.map:\n      returnValue = false;\n      break;\n\n    case _1.ZodTypes.date:\n      returnValue = true;\n      break;\n\n    case _1.ZodTypes.promise:\n      returnValue = false;\n      break;\n\n    case _1.ZodTypes.transformer:\n      returnValue = exports.isScalar(def.output);\n      break;\n\n    case _1.ZodTypes.optional:\n      returnValue = exports.isScalar(def.innerType);\n      break;\n\n    case _1.ZodTypes.nullable:\n      returnValue = exports.isScalar(def.innerType);\n      break;\n\n    default:\n      util_1.util.assertNever(def);\n  }\n\n  return returnValue;\n};\n\nexports.isScalar = isScalar;","map":{"version":3,"sources":["../../src/isScalar.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isScalar = void 0;\nvar _1 = require(\".\");\nvar util_1 = require(\"./helpers/util\");\nvar isScalar = function (schema, params) {\n    if (params === void 0) { params = { root: true }; }\n    var def = schema._def;\n    var returnValue = false;\n    switch (def.t) {\n        case _1.ZodTypes.string:\n            returnValue = true;\n            break;\n        case _1.ZodTypes.number:\n            returnValue = true;\n            break;\n        case _1.ZodTypes.bigint:\n            returnValue = true;\n            break;\n        case _1.ZodTypes.boolean:\n            returnValue = true;\n            break;\n        case _1.ZodTypes.undefined:\n            returnValue = true;\n            break;\n        case _1.ZodTypes.null:\n            returnValue = true;\n            break;\n        case _1.ZodTypes.any:\n            returnValue = false;\n            break;\n        case _1.ZodTypes.unknown:\n            returnValue = false;\n            break;\n        case _1.ZodTypes.never:\n            returnValue = false;\n            break;\n        case _1.ZodTypes.void:\n            returnValue = false;\n            break;\n        case _1.ZodTypes.array:\n            if (params.root === false)\n                return false;\n            returnValue = exports.isScalar(def.type, { root: false });\n            break;\n        case _1.ZodTypes.object:\n            returnValue = false;\n            break;\n        case _1.ZodTypes.union:\n            returnValue = def.options.every(function (x) { return exports.isScalar(x); });\n            break;\n        case _1.ZodTypes.intersection:\n            returnValue = exports.isScalar(def.left) && exports.isScalar(def.right);\n            break;\n        case _1.ZodTypes.tuple:\n            returnValue = def.items.every(function (x) { return exports.isScalar(x, { root: false }); });\n            break;\n        case _1.ZodTypes.lazy:\n            returnValue = exports.isScalar(def.getter());\n            break;\n        case _1.ZodTypes.literal:\n            returnValue = true;\n            break;\n        case _1.ZodTypes.enum:\n            returnValue = true;\n            break;\n        case _1.ZodTypes.nativeEnum:\n            returnValue = true;\n            break;\n        case _1.ZodTypes.function:\n            returnValue = false;\n            break;\n        case _1.ZodTypes.record:\n            returnValue = false;\n            break;\n        case _1.ZodTypes.map:\n            returnValue = false;\n            break;\n        case _1.ZodTypes.date:\n            returnValue = true;\n            break;\n        case _1.ZodTypes.promise:\n            returnValue = false;\n            break;\n        case _1.ZodTypes.transformer:\n            returnValue = exports.isScalar(def.output);\n            break;\n        case _1.ZodTypes.optional:\n            returnValue = exports.isScalar(def.innerType);\n            break;\n        case _1.ZodTypes.nullable:\n            returnValue = exports.isScalar(def.innerType);\n            break;\n        default:\n            util_1.util.assertNever(def);\n    }\n    return returnValue;\n};\nexports.isScalar = isScalar;\n//# sourceMappingURL=isScalar.js.map"]},"metadata":{},"sourceType":"script"}