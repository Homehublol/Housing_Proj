{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar util_1 = require(\"./helpers/util\");\n\nvar ZodError_1 = require(\"./ZodError\");\n\nexports.NOSET = Symbol('no_set');\n\nvar PseudoPromise = function () {\n  function PseudoPromise(funcs) {\n    var _this = this;\n\n    if (funcs === void 0) {\n      funcs = [];\n    }\n\n    this.all = function (pps) {\n      return _this.then(function (_arg, ctx) {\n        if (ctx.async) {\n          var allValues = Promise.all(pps.map(function (pp) {\n            return __awaiter(_this, void 0, void 0, function () {\n              var asdf, err_1;\n              return __generator(this, function (_a) {\n                switch (_a.label) {\n                  case 0:\n                    _a.trys.push([0, 2,, 3]);\n\n                    return [4, pp.getValueAsync()];\n\n                  case 1:\n                    asdf = _a.sent();\n                    return [2, asdf];\n\n                  case 2:\n                    err_1 = _a.sent();\n                    return [2, util_1.INVALID];\n\n                  case 3:\n                    return [2];\n                }\n              });\n            });\n          })).then(function (vals) {\n            return vals;\n          });\n          return allValues;\n        } else {\n          return pps.map(function (pp) {\n            return pp.getValueSync();\n          });\n        }\n      });\n    };\n\n    this.then = function (func) {\n      return new PseudoPromise(__spread(_this.items, [{\n        type: 'function',\n        function: func\n      }]));\n    };\n\n    this.catch = function (catcher) {\n      return new PseudoPromise(__spread(_this.items, [{\n        type: 'catcher',\n        catcher: catcher\n      }]));\n    };\n\n    this.getValueSync = function () {\n      var val = undefined;\n\n      var _loop_1 = function (index) {\n        try {\n          var item = _this.items[index];\n\n          if (item.type === 'function') {\n            val = item.function(val, {\n              async: false\n            });\n          }\n        } catch (err) {\n          var catcherIndex = _this.items.findIndex(function (x, i) {\n            return x.type === 'catcher' && i > index;\n          });\n\n          var catcherItem = _this.items[catcherIndex];\n\n          if (!catcherItem || catcherItem.type !== 'catcher') {\n            throw err;\n          } else {\n            index = catcherIndex;\n            val = catcherItem.catcher(err, {\n              async: false\n            });\n          }\n        }\n\n        out_index_1 = index;\n      };\n\n      var out_index_1;\n\n      for (var index = 0; index < _this.items.length; index++) {\n        _loop_1(index);\n\n        index = out_index_1;\n      }\n\n      return val;\n    };\n\n    this.getValueAsync = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var val, _loop_2, this_1, out_index_2, index;\n\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              val = undefined;\n\n              _loop_2 = function (index) {\n                var item, err_2, catcherIndex, catcherItem;\n                return __generator(this, function (_a) {\n                  switch (_a.label) {\n                    case 0:\n                      item = this_1.items[index];\n                      _a.label = 1;\n\n                    case 1:\n                      _a.trys.push([1, 4,, 8]);\n\n                      if (!(item.type === 'function')) return [3, 3];\n                      return [4, item.function(val, {\n                        async: true\n                      })];\n\n                    case 2:\n                      val = _a.sent();\n                      _a.label = 3;\n\n                    case 3:\n                      return [3, 8];\n\n                    case 4:\n                      err_2 = _a.sent();\n                      catcherIndex = this_1.items.findIndex(function (x, i) {\n                        return x.type === 'catcher' && i > index;\n                      });\n                      catcherItem = this_1.items[catcherIndex];\n                      if (!(!catcherItem || catcherItem.type !== 'catcher')) return [3, 5];\n                      throw err_2;\n\n                    case 5:\n                      index = catcherIndex;\n                      return [4, catcherItem.catcher(err_2, {\n                        async: true\n                      })];\n\n                    case 6:\n                      val = _a.sent();\n                      _a.label = 7;\n\n                    case 7:\n                      return [3, 8];\n\n                    case 8:\n                      if (val instanceof PseudoPromise) {\n                        throw new Error('ASYNC: DO NOT RETURN PSEUDOPROMISE FROM FUNCTIONS');\n                      }\n\n                      if (val instanceof Promise) {\n                        throw new Error('ASYNC: DO NOT RETURN PROMISE FROM FUNCTIONS');\n                      }\n\n                      out_index_2 = index;\n                      return [2];\n                  }\n                });\n              };\n\n              this_1 = this;\n              index = 0;\n              _a.label = 1;\n\n            case 1:\n              if (!(index < this.items.length)) return [3, 4];\n              return [5, _loop_2(index)];\n\n            case 2:\n              _a.sent();\n\n              index = out_index_2;\n              _a.label = 3;\n\n            case 3:\n              index++;\n              return [3, 1];\n\n            case 4:\n              return [2, val];\n          }\n        });\n      });\n    };\n\n    this.items = funcs;\n  }\n\n  PseudoPromise.all = function (pps) {\n    return new PseudoPromise().all(pps);\n  };\n\n  PseudoPromise.object = function (pps) {\n    return new PseudoPromise().then(function (_arg, ctx) {\n      var e_1, _a;\n\n      var value = {};\n      var zerr = new ZodError_1.ZodError([]);\n\n      if (ctx.async) {\n        var getAsyncObject = function () {\n          return __awaiter(void 0, void 0, void 0, function () {\n            var items, items_2, items_2_1, item;\n\n            var e_2, _a;\n\n            return __generator(this, function (_b) {\n              switch (_b.label) {\n                case 0:\n                  return [4, Promise.all(Object.keys(pps).map(function (k) {\n                    return __awaiter(void 0, void 0, void 0, function () {\n                      var v, err_3;\n                      return __generator(this, function (_a) {\n                        switch (_a.label) {\n                          case 0:\n                            _a.trys.push([0, 2,, 3]);\n\n                            return [4, pps[k].getValueAsync()];\n\n                          case 1:\n                            v = _a.sent();\n                            return [2, [k, v]];\n\n                          case 2:\n                            err_3 = _a.sent();\n\n                            if (err_3 instanceof ZodError_1.ZodError) {\n                              zerr.addIssues(err_3.issues);\n                              return [2, [k, util_1.INVALID]];\n                            }\n\n                            throw err_3;\n\n                          case 3:\n                            return [2];\n                        }\n                      });\n                    });\n                  }))];\n\n                case 1:\n                  items = _b.sent();\n                  if (!zerr.isEmpty) throw zerr;\n\n                  try {\n                    for (items_2 = __values(items), items_2_1 = items_2.next(); !items_2_1.done; items_2_1 = items_2.next()) {\n                      item = items_2_1.value;\n                      if (item[1] !== exports.NOSET) value[item[0]] = item[1];\n                    }\n                  } catch (e_2_1) {\n                    e_2 = {\n                      error: e_2_1\n                    };\n                  } finally {\n                    try {\n                      if (items_2_1 && !items_2_1.done && (_a = items_2.return)) _a.call(items_2);\n                    } finally {\n                      if (e_2) throw e_2.error;\n                    }\n                  }\n\n                  return [2, value];\n              }\n            });\n          });\n        };\n\n        return getAsyncObject();\n      } else {\n        var items = Object.keys(pps).map(function (k) {\n          try {\n            var v = pps[k].getValueSync();\n            return [k, v];\n          } catch (err) {\n            if (err instanceof ZodError_1.ZodError) {\n              zerr.addIssues(err.issues);\n              return [k, util_1.INVALID];\n            }\n\n            throw err;\n          }\n        });\n        if (!zerr.isEmpty) throw zerr;\n\n        try {\n          for (var items_1 = __values(items), items_1_1 = items_1.next(); !items_1_1.done; items_1_1 = items_1.next()) {\n            var item = items_1_1.value;\n            if (item[1] !== exports.NOSET) value[item[0]] = item[1];\n          }\n        } catch (e_1_1) {\n          e_1 = {\n            error: e_1_1\n          };\n        } finally {\n          try {\n            if (items_1_1 && !items_1_1.done && (_a = items_1.return)) _a.call(items_1);\n          } finally {\n            if (e_1) throw e_1.error;\n          }\n        }\n\n        return value;\n      }\n    });\n  };\n\n  PseudoPromise.resolve = function (value) {\n    if (value instanceof PseudoPromise) {\n      throw new Error('Do not pass PseudoPromise into PseudoPromise.resolve');\n    }\n\n    return new PseudoPromise().then(function () {\n      return value;\n    });\n  };\n\n  return PseudoPromise;\n}();\n\nexports.PseudoPromise = PseudoPromise;","map":{"version":3,"sources":["../../src/PseudoPromise.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"./helpers/util\");\nvar ZodError_1 = require(\"./ZodError\");\nexports.NOSET = Symbol('no_set');\nvar PseudoPromise = (function () {\n    function PseudoPromise(funcs) {\n        var _this = this;\n        if (funcs === void 0) { funcs = []; }\n        this.all = function (pps) {\n            return _this.then(function (_arg, ctx) {\n                if (ctx.async) {\n                    var allValues = Promise.all(pps.map(function (pp) { return __awaiter(_this, void 0, void 0, function () {\n                        var asdf, err_1;\n                        return __generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0:\n                                    _a.trys.push([0, 2, , 3]);\n                                    return [4, pp.getValueAsync()];\n                                case 1:\n                                    asdf = _a.sent();\n                                    return [2, asdf];\n                                case 2:\n                                    err_1 = _a.sent();\n                                    return [2, util_1.INVALID];\n                                case 3: return [2];\n                            }\n                        });\n                    }); })).then(function (vals) {\n                        return vals;\n                    });\n                    return allValues;\n                }\n                else {\n                    return pps.map(function (pp) { return pp.getValueSync(); });\n                }\n            });\n        };\n        this.then = function (func) {\n            return new PseudoPromise(__spread(_this.items, [\n                { type: 'function', function: func },\n            ]));\n        };\n        this.catch = function (catcher) {\n            return new PseudoPromise(__spread(_this.items, [\n                { type: 'catcher', catcher: catcher },\n            ]));\n        };\n        this.getValueSync = function () {\n            var val = undefined;\n            var _loop_1 = function (index) {\n                try {\n                    var item = _this.items[index];\n                    if (item.type === 'function') {\n                        val = item.function(val, { async: false });\n                    }\n                }\n                catch (err) {\n                    var catcherIndex = _this.items.findIndex(function (x, i) { return x.type === 'catcher' && i > index; });\n                    var catcherItem = _this.items[catcherIndex];\n                    if (!catcherItem || catcherItem.type !== 'catcher') {\n                        throw err;\n                    }\n                    else {\n                        index = catcherIndex;\n                        val = catcherItem.catcher(err, { async: false });\n                    }\n                }\n                out_index_1 = index;\n            };\n            var out_index_1;\n            for (var index = 0; index < _this.items.length; index++) {\n                _loop_1(index);\n                index = out_index_1;\n            }\n            return val;\n        };\n        this.getValueAsync = function () { return __awaiter(_this, void 0, void 0, function () {\n            var val, _loop_2, this_1, out_index_2, index;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        val = undefined;\n                        _loop_2 = function (index) {\n                            var item, err_2, catcherIndex, catcherItem;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        item = this_1.items[index];\n                                        _a.label = 1;\n                                    case 1:\n                                        _a.trys.push([1, 4, , 8]);\n                                        if (!(item.type === 'function')) return [3, 3];\n                                        return [4, item.function(val, { async: true })];\n                                    case 2:\n                                        val = _a.sent();\n                                        _a.label = 3;\n                                    case 3: return [3, 8];\n                                    case 4:\n                                        err_2 = _a.sent();\n                                        catcherIndex = this_1.items.findIndex(function (x, i) { return x.type === 'catcher' && i > index; });\n                                        catcherItem = this_1.items[catcherIndex];\n                                        if (!(!catcherItem || catcherItem.type !== 'catcher')) return [3, 5];\n                                        throw err_2;\n                                    case 5:\n                                        index = catcherIndex;\n                                        return [4, catcherItem.catcher(err_2, { async: true })];\n                                    case 6:\n                                        val = _a.sent();\n                                        _a.label = 7;\n                                    case 7: return [3, 8];\n                                    case 8:\n                                        if (val instanceof PseudoPromise) {\n                                            throw new Error('ASYNC: DO NOT RETURN PSEUDOPROMISE FROM FUNCTIONS');\n                                        }\n                                        if (val instanceof Promise) {\n                                            throw new Error('ASYNC: DO NOT RETURN PROMISE FROM FUNCTIONS');\n                                        }\n                                        out_index_2 = index;\n                                        return [2];\n                                }\n                            });\n                        };\n                        this_1 = this;\n                        index = 0;\n                        _a.label = 1;\n                    case 1:\n                        if (!(index < this.items.length)) return [3, 4];\n                        return [5, _loop_2(index)];\n                    case 2:\n                        _a.sent();\n                        index = out_index_2;\n                        _a.label = 3;\n                    case 3:\n                        index++;\n                        return [3, 1];\n                    case 4: return [2, val];\n                }\n            });\n        }); };\n        this.items = funcs;\n    }\n    PseudoPromise.all = function (pps) {\n        return new PseudoPromise().all(pps);\n    };\n    PseudoPromise.object = function (pps) {\n        return new PseudoPromise().then(function (_arg, ctx) {\n            var e_1, _a;\n            var value = {};\n            var zerr = new ZodError_1.ZodError([]);\n            if (ctx.async) {\n                var getAsyncObject = function () { return __awaiter(void 0, void 0, void 0, function () {\n                    var items, items_2, items_2_1, item;\n                    var e_2, _a;\n                    return __generator(this, function (_b) {\n                        switch (_b.label) {\n                            case 0: return [4, Promise.all(Object.keys(pps).map(function (k) { return __awaiter(void 0, void 0, void 0, function () {\n                                    var v, err_3;\n                                    return __generator(this, function (_a) {\n                                        switch (_a.label) {\n                                            case 0:\n                                                _a.trys.push([0, 2, , 3]);\n                                                return [4, pps[k].getValueAsync()];\n                                            case 1:\n                                                v = _a.sent();\n                                                return [2, [k, v]];\n                                            case 2:\n                                                err_3 = _a.sent();\n                                                if (err_3 instanceof ZodError_1.ZodError) {\n                                                    zerr.addIssues(err_3.issues);\n                                                    return [2, [k, util_1.INVALID]];\n                                                }\n                                                throw err_3;\n                                            case 3: return [2];\n                                        }\n                                    });\n                                }); }))];\n                            case 1:\n                                items = _b.sent();\n                                if (!zerr.isEmpty)\n                                    throw zerr;\n                                try {\n                                    for (items_2 = __values(items), items_2_1 = items_2.next(); !items_2_1.done; items_2_1 = items_2.next()) {\n                                        item = items_2_1.value;\n                                        if (item[1] !== exports.NOSET)\n                                            value[item[0]] = item[1];\n                                    }\n                                }\n                                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                                finally {\n                                    try {\n                                        if (items_2_1 && !items_2_1.done && (_a = items_2.return)) _a.call(items_2);\n                                    }\n                                    finally { if (e_2) throw e_2.error; }\n                                }\n                                return [2, value];\n                        }\n                    });\n                }); };\n                return getAsyncObject();\n            }\n            else {\n                var items = Object.keys(pps).map(function (k) {\n                    try {\n                        var v = pps[k].getValueSync();\n                        return [k, v];\n                    }\n                    catch (err) {\n                        if (err instanceof ZodError_1.ZodError) {\n                            zerr.addIssues(err.issues);\n                            return [k, util_1.INVALID];\n                        }\n                        throw err;\n                    }\n                });\n                if (!zerr.isEmpty)\n                    throw zerr;\n                try {\n                    for (var items_1 = __values(items), items_1_1 = items_1.next(); !items_1_1.done; items_1_1 = items_1.next()) {\n                        var item = items_1_1.value;\n                        if (item[1] !== exports.NOSET)\n                            value[item[0]] = item[1];\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (items_1_1 && !items_1_1.done && (_a = items_1.return)) _a.call(items_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                return value;\n            }\n        });\n    };\n    PseudoPromise.resolve = function (value) {\n        if (value instanceof PseudoPromise) {\n            throw new Error('Do not pass PseudoPromise into PseudoPromise.resolve');\n        }\n        return new PseudoPromise().then(function () { return value; });\n    };\n    return PseudoPromise;\n}());\nexports.PseudoPromise = PseudoPromise;\n//# sourceMappingURL=PseudoPromise.js.map"]},"metadata":{},"sourceType":"script"}