{"ast":null,"code":"var _jsxFileName = \"/Users/yijianzong/Documents/GitHub/Housing_Proj/NewFrontEnd/src/components/MyList.tsx\";\nimport React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Cookies from 'universal-cookie';\nimport MyListCard from './MyListCard';\n\nconst MyList = () => {\n  const cookies = new Cookies();\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"my-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, \"My list\", /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MyListCard, {\n    name: \"Keen\",\n    phone: \"123-456-7890\",\n    email: \"email@email.com\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  })), cookies.get('liked') ? // TODO: this must be done through backend. don't use cookies to check\n  cookies.get('liked').map(({\n    bioName,\n    email,\n    phone\n  }) => /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(MyListCard, {\n    name: String(bioName),\n    phone: String(phone),\n    email: String(email),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null));\n};\n\nexport default MyList;","map":{"version":3,"sources":["/Users/yijianzong/Documents/GitHub/Housing_Proj/NewFrontEnd/src/components/MyList.tsx"],"names":["React","Container","Row","Cookies","MyListCard","MyList","cookies","get","map","bioName","email","phone","String"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,MAAoB,GAAG,MAAM;AACjC,QAAMC,OAAO,GAAG,IAAIH,OAAJ,EAAhB;AAEA,sBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,MAAjB;AAAwB,IAAA,KAAK,EAAC,cAA9B;AAA6C,IAAA,KAAK,EAAC,iBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAKGG,OAAO,CAACC,GAAR,CAAY,OAAZ,IAAyB;AACxBD,EAAAA,OAAO,CACJC,GADH,CACO,OADP,EAEGC,GAFH,CAGI,CAAC;AACCC,IAAAA,OADD;AAECC,IAAAA,KAFD;AAGCC,IAAAA;AAHD,GAAD,kBASE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAEC,MAAM,CAACH,OAAD,CADd;AAEE,IAAA,KAAK,EAAEG,MAAM,CAACD,KAAD,CAFf;AAGE,IAAA,KAAK,EAAEC,MAAM,CAACF,KAAD,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAZN,CADD,gBAuBC,yCA5BJ,CADF;AAiCD,CApCD;;AAsCA,eAAeL,MAAf","sourcesContent":["import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Cookies from 'universal-cookie';\nimport MyListCard from './MyListCard';\n\nconst MyList: React.FC<{}> = () => {\n  const cookies = new Cookies();\n\n  return (\n    <Container className=\"my-list\">\n      My list\n      <Row>\n        <MyListCard name=\"Keen\" phone=\"123-456-7890\" email=\"email@email.com\" />\n      </Row>\n      {cookies.get('liked') ? ( // TODO: this must be done through backend. don't use cookies to check\n        cookies\n          .get('liked')\n          .map(\n            ({\n              bioName,\n              email,\n              phone,\n            }: {\n              bioName: any;\n              email: any;\n              phone: any;\n            }) => (\n              <Row>\n                <MyListCard\n                  name={String(bioName)}\n                  phone={String(phone)}\n                  email={String(email)}\n                />\n              </Row>\n            ),\n          )\n      ) : (\n        <></>\n      )}\n    </Container>\n  );\n};\n\nexport default MyList;\n"]},"metadata":{},"sourceType":"module"}