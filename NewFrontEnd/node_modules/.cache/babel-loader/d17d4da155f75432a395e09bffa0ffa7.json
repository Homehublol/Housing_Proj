{"ast":null,"code":"var _jsxFileName = \"/Users/yijianzong/Documents/GitHub/Housing_Proj/NewFrontEnd/src/components/Login.tsx\";\nimport React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport { GoogleLogin } from 'react-google-login';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { selectUser, login } from '../redux/slices/auth';\nimport { miscIcons } from '../assets/icons/all';\nimport { LOGIN_INFO_TOOLTIP } from '../assets/constants/messages'; // https://developers.google.com/identity/sign-in/web/sign-in\n\nconst Login = ({\n  handleClose,\n  show\n}) => {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  const isOnline = response => {\n    return 'profileObj' in response;\n  };\n\n  const responseGoogleSuccess = response => {\n    if (isOnline(response)) {\n      const profile = response.profileObj;\n      console.log(profile); // TODO\n\n      console.log(response);\n      dispatch(login(profile.name, profile.email));\n    } else {\n      console.log('User is offline');\n      console.log(response);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    id: \"LoginModal\",\n    show: show,\n    onHide: handleClose,\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"no-show\",\n    onClick: () => handleClose(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"pl-2\",\n    src: \"/close.svg\",\n    alt: \"Close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(OverlayTrigger, {\n    placement: \"bottom-end\",\n    overlay: /*#__PURE__*/React.createElement(Tooltip, {\n      id: \"tooltip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 20\n      }\n    }, LOGIN_INFO_TOOLTIP),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right pr-2 pt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"hello\", /*#__PURE__*/React.createElement(miscIcons.infoCircle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  })))), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/login.svg\",\n    alt: \"LogIn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(GoogleLogin, {\n    className: \"g-auth\",\n    clientId: \"778916194800-977823s60p7mtu1sj72ru0922p2pqh6m.apps.googleusercontent.com\",\n    onSuccess: response => {\n      responseGoogleSuccess(response);\n      handleClose();\n    },\n    onFailure: response => console.log(response) // TODO: add login cookie to onSuccess using universal-cookie\n    ,\n    cookiePolicy: \"single_host_origin\",\n    icon: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"d-block\",\n    src: \"/loginButton.svg\",\n    alt: \"LogInButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/yijianzong/Documents/GitHub/Housing_Proj/NewFrontEnd/src/components/Login.tsx"],"names":["React","Modal","Button","GoogleLogin","useSelector","useDispatch","OverlayTrigger","Tooltip","selectUser","login","miscIcons","LOGIN_INFO_TOOLTIP","Login","handleClose","show","user","dispatch","isOnline","response","responseGoogleSuccess","profile","profileObj","console","log","name","email"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport {\n  GoogleLogin,\n  GoogleLoginResponse,\n  GoogleLoginResponseOffline,\n} from 'react-google-login';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { selectUser, login } from '../redux/slices/auth';\nimport { miscIcons } from '../assets/icons/all';\nimport { LOGIN_INFO_TOOLTIP } from '../assets/constants/messages';\n\n// https://developers.google.com/identity/sign-in/web/sign-in\ninterface PathProps {\n  handleClose: Function;\n  show: boolean;\n}\n\nconst Login: React.FC<PathProps> = ({ handleClose, show }) => {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  const isOnline = (\n    response: GoogleLoginResponse | GoogleLoginResponseOffline,\n  ): response is GoogleLoginResponse => {\n    return 'profileObj' in response;\n  };\n\n  const responseGoogleSuccess = (\n    response: GoogleLoginResponse | GoogleLoginResponseOffline,\n  ) => {\n    if (isOnline(response)) {\n      const profile = response.profileObj;\n      console.log(profile); // TODO\n      console.log(response);\n      dispatch(login(profile.name, profile.email));\n    } else {\n      console.log('User is offline');\n      console.log(response);\n    }\n  };\n\n  return (\n    <Modal id=\"LoginModal\" show={show} onHide={handleClose} centered>\n      <div>\n        <Button variant=\"no-show\" onClick={() => handleClose()}>\n          <img className=\"pl-2\" src=\"/close.svg\" alt=\"Close\" />\n        </Button>\n        <OverlayTrigger\n          placement=\"bottom-end\"\n          overlay={<Tooltip id=\"tooltip\">{LOGIN_INFO_TOOLTIP}</Tooltip>}\n        >\n          <div className=\"float-right pr-2 pt-1\" >\n          hello\n          <miscIcons.infoCircle/>\n          </div>\n        </OverlayTrigger>\n      </div>\n\n      <img src=\"/login.svg\" alt=\"LogIn\" />\n      <GoogleLogin\n        className=\"g-auth\"\n        clientId=\"778916194800-977823s60p7mtu1sj72ru0922p2pqh6m.apps.googleusercontent.com\"\n        onSuccess={(response) => {\n          responseGoogleSuccess(response);\n          handleClose();\n        }}\n        onFailure={(response) => console.log(response)}\n        // TODO: add login cookie to onSuccess using universal-cookie\n        cookiePolicy=\"single_host_origin\"\n        icon={false}\n      >\n        {/* \n        isSignedIn={true} attribute will call onSuccess callback on load to keep the user signed in\n         */}\n        <img className=\"d-block\" src=\"/loginButton.svg\" alt=\"LogInButton\" />\n      </GoogleLogin>\n    </Modal>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}